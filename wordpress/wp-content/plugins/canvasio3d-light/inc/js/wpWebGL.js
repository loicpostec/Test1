function canvasio3D_JS(){if(mainIniFlag==null){var iT=0,i=0,winCount=0,winID=0,winWidth=0,winHeight=0,objScale=[],objLoaded=[],vector=[],mousewheel='',winMax=0,backImg=[],objZoom=[],srcObj=[],backCol=[],texturePath=[],envPath=[],envVal=[],infoText='',fpsON='',thisID,thisWin=[],thisCount='',thisHalfWidth=0,thisHalfHeight=0,rollSpeedX=[],rollSpeedY=[],rollMode=[],moverID=0,mouseOverMode=0,mouseOverOn=[],cubeTextureLoader=null,mouse=[],mX=0,mY=0,light=[],container,stats,objAmbient=[],objCol=[],shine=[],light0=[],light1=[],light2=[],light3=[],light4=[],lightRotate=[],lightRotate=[],l1=[],l2=[],l3=[],l4=[],renderer=[],bgScene=[],bgCam=[],camera=[],scene=[],obj=[],geo=[],shadowOn=[],targetRotationX=[],targetRotationY=[],targetRotationOnMouseDownX=0,targetRotationOnMouseDownY=0,mouseX=0,mouseY=0,mouseOnMouseDownX=0,mouseOnMouseDownY=0,time=0,can3D='',objData,strJSON='',m=[],animOn=0,debugOn=1,loadingText=[],objCenterStore=[],frameStag=[],objCenterIn={x1:0,x2:0,y1:0,y2:0,z1:0,z2:0},lang='',floorOn=[],floorY=[],newSizeOn=false,newSizeH=0,newSizeV=0;m['de_DE']='Auf diesem Ger√§t ist kein WebGL aktiviert. 3D-Grafik wird im langsamen Canvas-Modus gezeigt.';m['en_EN']='On this device is WebGL not activ. 3D-Graphic is switching to slow Canvas-Mode!';init_loader();var DetectWebGL=Detector.webgl;for(i=1;i<50;i++){can3D='3D_'+i;objWin=document.getElementById(can3D);if(objWin!=null){strJSON=objWin.getAttribute('data-parameter');strJSON=strJSON.replace(/'/g,'"');objJSON=jQuery.parseJSON(strJSON);setWin(objWin,objJSON)}else{break}}var mainIniFlag='ok';console.log('Canvasio3D Light - V1.3.4');loop()}function setWin(winID,winDat){winCount=parseInt(winDat['winCount']);backImg[winCount]=winDat['backimg'].toString();objLoaded[winCount]=false;winMax=winCount+1;winWidth=parseInt(winDat['width']);winHeight=parseInt(winDat['height']);objZoom[winCount]=parseInt(winDat['zoom']);objScale[winCount]=Number(winDat['objscale']);backCol[winCount]=winDat['backcol'].toString();texturePath[winCount]=winDat['texturpath'].toString();envPath[winCount]=winDat['reflection'].toString();envVal[winCount]=parseInt(winDat['refval']);lightRotate[winCount]=winDat['lightrotate'].toString();shine[winCount]=parseInt(winDat['shine']);objAmbient[winCount]=Number(winDat['ambient']);if(winDat['objcolor']==null||winDat['objcolor']==''){objCol[winCount]=Number(winDat['objcol'])}else{objCol[winCount]=Number(winDat['objcolor'])}infoText=winDat['text'].toString();fpsON=winDat['fps'].toLowerCase();rollSpeedX[winCount]=parseInt(winDat['rollspeedv'])/1000;rollSpeedY[winCount]=parseInt(winDat['rollspeedh'])/1000;vector[winCount]=winDat['vector'].toString();if(vector[winCount]=='on')vector[winCount]=true;if(vector[winCount]=='off')vector[winCount]=false;mousewheel=winDat['mousewheel'].toString();if(winDat['rollspeedv']==0)rollSpeedX[winCount]=parseInt(winDat['rollspeedx'])/1000;if(winDat['rollspeedh']==0)rollSpeedY[winCount]=parseInt(winDat['rollspeedy'])/1000;rollMode[winCount]=winDat['rollmode'].toLowerCase();mouse[winCount]=winDat['mouse'].toLowerCase();light[winCount]=parseInt(winDat['lightset']);thisWin[winID.id]=winCount;_picUrl=winDat['_picUrl'].toString();_uploadUrl=winDat['_uploadUrl'].toString();srcObj[winCount]=winDat['objpath'];debugOn=parseInt(winDat['debug']);debugOn=1;targetRotationX[winCount]=0;targetRotationY[winCount]=0;loadingText[winCount]=winDat['loadingtext'].toString();floorOn[winCount]=winDat['floor'].toString();shadowOn[winCount]=winDat['objshadow'];floorY[winCount]=parseInt(winDat['floorheight']);if(shadowOn[winCount]=='On'||shadowOn[winCount]=='ON')shadowOn[winCount]='on';if(floorOn[winCount]=='On'||floorOn[winCount]=='ON')floorOn[winCount]='on';if(backImg[winCount]=='...')backImg[winCount]='';objCenterStore[winCount]=objCenterIn;if(winDat['lang']!='de_DE')winDat['lang']='en_EN';if(!DetectWebGL&&winCount==1)alert(m[winDat['lang']]);if(winWidth>940)winWidth=940;if(winHeight>940)winHeight=940;frameStag[winCount]={width:0,height:0};frameStag[winCount].width=winWidth;frameStag[winCount].height=winHeight;if(envVal[winCount]>10){envVal[winCount]=1}else{envVal[winCount]=envVal[winCount]/10}camera[winCount]=new THREE.PerspectiveCamera(objZoom[winCount],winWidth/winHeight,1,5000);camera[winCount].position.z=100;scene[winCount]=new THREE.Scene();if(!DetectWebGL){renderer[winCount]=new THREE.CanvasRenderer()}else{if(shadowOn[winCount]=='on'){renderer[winCount]=new THREE.WebGLRenderer({antialias:true});renderer[winCount].shadowMap.enabled=true;renderer[winCount].shadowMap.cullFace=THREE.CullFaceBack;light3[winCount]=new THREE.DirectionalLight(0xf7f7f7,0.25);light3[winCount].position.set(7,14,14);light3[winCount].position.multiplyScalar(8);light3[winCount].shadowMapWidth=1024;light3[winCount].shadowMapHeight=1024;var d=44;light3[winCount].shadowCameraLeft=-d;light3[winCount].shadowCameraRight=d;light3[winCount].shadowCameraTop=d;light3[winCount].shadowCameraBottom=-d;light3[winCount].shadowCameraFar=440;light3[winCount].shadowDarkness=0.30;light3[winCount].castShadow=true;scene[winCount].add(light3[winCount])}else{renderer[winCount]=new THREE.WebGLRenderer({antialias:true});renderer[winCount].autoClear=true;renderer[winCount].preserveDrawingBuffer=false;renderer[winCount].setPixelRatio(window.devicePixelRatio)}}if(backImg[winCount]!=''){renderer[winCount].setClearColor(backCol[winCount]);var backgroundTexture=THREE.ImageUtils.loadTexture(backImg[winCount]);backgroundTexture.needsUpdate=true;var bgImg=new THREE.Mesh(new THREE.PlaneGeometry(2,2,0),new THREE.MeshBasicMaterial({map:backgroundTexture}));bgImg.material.depthTest=false;bgImg.material.depthWrite=false;bgScene[winCount]=new THREE.Scene();bgCam[winCount]=new THREE.Camera();bgScene[winCount].add(bgCam);bgScene[winCount].add(bgImg)}else{renderer[winCount].setClearColor(backCol[winCount])}var tw='3D_'+(winCount+1),idw=document.getElementById(tw).parentNode.parentNode,infoLoading=null,info=null,pg=null,twWin=document.getElementById(tw);resizeCanvas(winCount);winID.appendChild(renderer[winCount].domElement);infoLoading=document.createElement('div');infoLoading.id="caInfoLoading";infoLoading.style.color='#777777';infoLoading.style.position='absolute';infoLoading.style.marginTop=-28+'px';infoLoading.style.width=twWin.offsetWidth+'px';infoLoading.style.textAlign='center';infoLoading.innerHTML=loadingText[winCount];winID.appendChild(infoLoading);renderer[winCount].render(scene[winCount],camera[winCount]);if(infoText!=''){info=document.createElement('p');info.style.position='absolute';info.style.marginTop=-winHeight+'px';info.style.width=winWidth+'px';info.style.textAlign='center';info.innerHTML=infoText;winID.appendChild(infoLoading)}if(floorOn[winCount]!='off'){pg=new THREE.PlaneGeometry(10000,10000),ma=new THREE.MeshPhongMaterial({color:0xF6F6F6,specular:0xFFFFFF});obj[winCount]=new THREE.Mesh(pg,ma);obj[winCount].rotation.x=-Math.PI/2;obj[winCount].position.y=parseInt(-floorY[winCount]);obj[winCount].receiveShadow=true;scene[winCount].add(obj[winCount])}switch(srcObj[winCount]){case 'octa':easyObj(winCount,'octa','',objScale[winCount],objCol[winCount],texturePath[winCount],envPath[winCount],envVal[winCount],objAmbient[winCount],shine[winCount]);break;case 'torus':easyObj(winCount,'torus','',objScale[winCount],objCol[winCount],texturePath[winCount],envPath[winCount],envVal[winCount],objAmbient[winCount],shine[winCount]);break;case 'box':easyObj(winCount,'box','',objScale[winCount],objCol[winCount],texturePath[winCount],envPath[winCount],envVal[winCount],objAmbient[winCount],shine[winCount]);break;case 'panel':easyObj(winCount,'panel','',objScale[winCount],objCol[winCount],texturePath[winCount],envPath[winCount],envVal[winCount],objAmbient[winCount],shine[winCount]);break;case 'ball':easyObj(winCount,'ball','',objScale[winCount],objCol[winCount],texturePath[winCount],envPath[winCount],envVal[winCount],objAmbient[winCount],shine[winCount]);break;case 'Octa':easyObj(winCount,'octa','',objScale[winCount],objCol[winCount],texturePath[winCount],envPath[winCount],envVal[winCount],objAmbient[winCount],shine[winCount]);break;case 'Torus':easyObj(winCount,'torus','',objScale[winCount],objCol[winCount],texturePath[winCount],envPath[winCount],envVal[winCount],objAmbient[winCount],shine[winCount]);break;case 'Box':easyObj(winCount,'box','',objScale[winCount],objCol[winCount],texturePath[winCount],envPath[winCount],envVal[winCount],objAmbient[winCount],shine[winCount]);break;case 'Panel':easyObj(winCount,'panel','',objScale[winCount],objCol[winCount],texturePath[winCount],envPath[winCount],envVal[winCount],objAmbient[winCount],shine[winCount]);break;case 'Ball':easyObj(winCount,'ball','',objScale[winCount],objCol[winCount],texturePath[winCount],envPath[winCount],envVal[winCount],objAmbient[winCount],shine[winCount]);break;default:if(srcObj[winCount]==null)srcObj[winCount]='';var fileType=srcObj[winCount].split('.').pop().toLowerCase();switch(fileType){case "obj":loadOBJ(winCount,srcObj[winCount],'',objScale[winCount],objCol[winCount],texturePath[winCount],envPath[winCount],envVal[winCount],objAmbient[winCount],shine[winCount]);break;case "stl":loadSTL(winCount,srcObj[winCount],'',objScale[winCount],objCol[winCount],texturePath[winCount],envPath[winCount],envVal[winCount],objAmbient[winCount],shine[winCount]);break;case "js":loadJS(winCount,srcObj[winCount],'',objScale[winCount],objCol[winCount],texturePath[winCount],envPath[winCount],envVal[winCount],objAmbient[winCount],shine[winCount]);break;case "dae":loadDAE(winCount,srcObj[winCount],'',objScale[winCount],objCol[winCount],texturePath[winCount],envPath[winCount],envVal[winCount],objAmbient[winCount],shine[winCount]);break;default:objToScene(winCount,'','','','','','','','','','error')}}light0[winCount]=new THREE.AmbientLight(0x404040);scene[winCount].add(light0[winCount]);switch(light[winCount]){case 1:light1[winCount]=new THREE.DirectionalLight(0xffffff,1);light1[winCount].position.set(0,1,1).normalize();scene[winCount].add(light1[winCount]);break;case 2:light1[winCount]=new THREE.DirectionalLight(0xffffff,1);light1[winCount].color.setHSL(0.1,1,0.95);light1[winCount].position.set(8,4,20);scene[winCount].add(light1[winCount]);light2[winCount]=new THREE.PointLight(0xffffff,0.4);scene[winCount].add(light2[winCount]);break;case 3:light1[winCount]=new THREE.SpotLight(0xffffff,0.7);light1[winCount].position.set(-30,70,85);scene[winCount].add(light1[winCount]);light2[winCount]=new THREE.PointLight(0xffffff,0.6);light2[winCount].position.set(0,10,80);scene[winCount].add(light2[winCount]);break;case 4:light1[winCount]=new THREE.SpotLight(0xffffff,0.8);light1[winCount].position.set(-30,70,85);scene[winCount].add(light1[winCount]);light2[winCount]=new THREE.DirectionalLight(0xffffff,0.8);light2[winCount].color.setHSL(0.1,1,0.95);light2[winCount].position.set(8,4,20);scene[winCount].add(light2[winCount]);break;case 5:light1[winCount]=new THREE.DirectionalLight(0xffffff,0.5);light1[winCount].position.set(-5,7,10);scene[winCount].add(light1[winCount]);light2[winCount]=new THREE.HemisphereLight(0xffffff,0xffffff,0.6);light2[winCount].color.setHSL(0.7,0.1,0.8);light2[winCount].groundColor.setHSL(0.5,0.1,0.7);light2[winCount].position.y=20;scene[winCount].add(light2[winCount]);break;case 6:light1[winCount]=new THREE.SpotLight(0xffffff,0.5);light1[winCount].position.set(0,50,100);scene[winCount].add(light1[winCount]);light2[winCount]=new THREE.DirectionalLight(0xffffff,0.4);light2[winCount].color.setHSL(0.1,0.1,0.95);light2[winCount].position.set(-3,20,30);scene[winCount].add(light2[winCount]);light3[winCount]=new THREE.HemisphereLight(0xffffff,0xffffff,0.5);light3[winCount].color.setHSL(0.7,0.1,0.8);light3[winCount].position.y=150;scene[winCount].add(light3[winCount]);break;case 7:light1[winCount]=new THREE.DirectionalLight(0xffffff,1.2);light1[winCount].position.set(10,5,8);scene[winCount].add(light1[winCount]);light2[winCount]=new THREE.HemisphereLight(0xffffff,0xffffff,0.7);light2[winCount].color.setHSL(0.7,0.1,1);light2[winCount].position.y=40;scene[winCount].add(light2[winCount]);break;case 8:light1[winCount]=new THREE.HemisphereLight(0xffffff,0xfafafa,0.9);light1[winCount].color.setHSL(0.2,0.1,0.6);light1[winCount].position.set(0,50,0);scene[winCount].add(light1[winCount]);light2[winCount]=new THREE.DirectionalLight(0xffffff,1.0);light2[winCount].color.setHSL(0.1,0.1,0.95);light2[winCount].position.set(2,1.75,10);scene[winCount].add(light2[winCount]);light3[winCount]=new THREE.SpotLight(0xffffff,0.7);light3[winCount].position.set(0,50,100);scene[winCount].add(light3[winCount]);break;case 9:light1[winCount]=new THREE.HemisphereLight(0xf7f7f7,0xfadaee,0.7);light1[winCount].color.setHSL(0.2,0.1,0.6);light1[winCount].position.set(0,50,0);scene[winCount].add(light1[winCount]);light2[winCount]=new THREE.DirectionalLight(0xf3f3ee,0.8);light2[winCount].color.setHSL(0.3,0.1,1);light2[winCount].position.set(2,1.75,10);scene[winCount].add(light2[winCount]);light3[winCount]=new THREE.SpotLight(0xff77fa,0.5);light3[winCount].position.set(0,50,100);scene[winCount].add(light3[winCount]);break;case 10:light1[winCount]=new THREE.PointLight(0xff0040,8,50);light1[winCount].position.set(-20,50,25);scene[winCount].add(light1[winCount]);light2[winCount]=new THREE.PointLight(0x0040ff,12,50);light2[winCount].position.set(2,1.75,20);scene[winCount].add(light2[winCount]);light3[winCount]=new THREE.PointLight(0x80ff80,12,50);light3[winCount].position.set(0,50,80);scene[winCount].add(light3[winCount]);light4[winCount]=new THREE.PointLight(0xffaa00,12,50);light4[winCount].position.set(0,20,50);scene[winCount].add(light4[winCount]);break;default:light1[winCount]=new THREE.DirectionalLight(0xffffff,2);light1[winCount].position.set(0,1,1).normalize();scene[winCount].add(light1[winCount])}if(mouse[winCount]=='on'){winID.addEventListener('mousedown',onDocumentMouseDown,false);if(mousewheel!='off'){winID.addEventListener('DOMMouseScroll',onDocumentMouseWheel,false);winID.onmousewheel=onDocumentMouseWheel}rollMode[winCount]='off';setCursorByID(winID.id,'move');winID.addEventListener('touchstart',touchHandler,true);winID.addEventListener('touchmove',touchHandler,true)}if(rollMode[winCount]=='mouseover'){winID.addEventListener('mouseover',onDocumentMouseOver,false)}window.addEventListener('resize',onWindowResize,false)}function onProgress(_e){if(_e.lengthComputable){var percentComplete=parseInt((_e.loaded/_e.total*100)),t='3D_'+(this.winCount+1),id=document.getElementById(t).childNodes[1],twWin=document.getElementById(t);id.style.width=twWin.offsetWidth+'px';id.innerHTML=loadingText[this.winCount]+' '+percentComplete+'%'}}function onWindowResize(){newSizeOn=true}function resizeCanvas(iW){var tmp='3D_'+(iW+1),frame=document.getElementById(tmp).parentNode,idw=frame.parentNode.parentNode,sW;sW=scaleSize(idw.offsetWidth,idw.offsetHeight,frameStag[iW].width,frameStag[iW].height);camera[iW].aspect=sW[0]/sW[1];camera[iW].updateProjectionMatrix();renderer[iW].setSize(sW[0],sW[1]);frame.style.width=sW[0]+'px';frame.style.height=sW[1]+'px'}function scaleSize(maxW,maxH,currW,currH){var ratio=currH/currW;if(currW>=maxW&&ratio<=1){currW=maxW;currH=currW*ratio}else if(currH>=maxH){currH=maxH;currW=currH/ratio}return[currW,currH]}function onDocumentMouseWheel(event){event.preventDefault();thisID=this;thisCount=thisWin[thisID.id];thisHalfWidth=document.getElementById(thisID.id).offsetWidth-2;thisHalfHeight=document.getElementById(thisID.id).offsetHeight-2;var delta=0;if(!event)event=window.event;if(event.wheelDelta){delta=event.wheelDelta/60;camera[thisCount].position.z=camera[thisCount].position.z-=delta*4}else if(event.detail){delta=-event.detail/2;camera[thisCount].position.z=camera[thisCount].position.z-=delta*4}}function touchHandler(event){var touches=event.changedTouches,first=touches[0],type="";thisID=this;thisCount=thisWin[thisID.id];thisHalfWidth=document.getElementById(thisID.id).offsetWidth-2;thisHalfHeight=document.getElementById(thisID.id).offsetHeight-2;switch(event.type){case "touchstart":type="mousedown";break;case "touchmove":type="mousemove";break;case "touchend":type="mouseup";break;default:return}if(type=='mousedown'){mouseOnMouseDownX=first.screenX-(thisHalfWidth/2);mouseOnMouseDownY=first.screenY-(thisHalfHeight/2);targetRotationOnMouseDownX=targetRotationX[thisCount];targetRotationOnMouseDownY=targetRotationY[thisCount]}if(type=='mousemove'){mouseX=first.screenX-(thisHalfWidth/2);targetRotationX[thisCount]=targetRotationOnMouseDownX+(mouseX-mouseOnMouseDownX)*0.02;mouseY=first.screenY-(thisHalfHeight/2);targetRotationY[thisCount]=targetRotationOnMouseDownY+(mouseY-mouseOnMouseDownY)*0.02}if(type=='mouseup'){mouseOverMode=0}event.preventDefault()}function onDocumentMouseDown(event){event.preventDefault();thisID=this;thisCount=thisWin[thisID.id];thisHalfWidth=document.getElementById(thisID.id).offsetWidth-2;thisHalfHeight=document.getElementById(thisID.id).offsetHeight-2;document.addEventListener('mousemove',onDocumentMouseMove,false);document.addEventListener('mouseup',onDocumentMouseUp,false);document.addEventListener('mouseout',onDocumentMouseOut,false);mouseOnMouseDownX=event.clientX-(thisHalfWidth/2);mouseOnMouseDownY=event.clientY-(thisHalfHeight/2);targetRotationOnMouseDownX=targetRotationX[thisCount];targetRotationOnMouseDownY=targetRotationY[thisCount]}function setCursorByID(id,cursorStyle){var elem;if(document.getElementById&&(elem=document.getElementById(id))){if(elem.style)elem.style.cursor=cursorStyle}}function onDocumentMouseOver(event){thisID=this;thisCount=thisWin[thisID.id];mouseOverMode=1;mouseOverOn[thisCount]=1;this.addEventListener('mouseout',onDocumentMouseOut,false)}function onDocumentMouseMove(event){mouseX=event.clientX-(thisHalfWidth/2);targetRotationX[thisCount]=targetRotationOnMouseDownX+(mouseX-mouseOnMouseDownX)*0.02;mouseY=event.clientY-(thisHalfHeight/2);targetRotationY[thisCount]=targetRotationOnMouseDownY+(mouseY-mouseOnMouseDownY)*0.02}function onDocumentMouseUp(event){document.removeEventListener('mousemove',onDocumentMouseMove,false);document.removeEventListener('mouseup',onDocumentMouseUp,false);document.removeEventListener('mouseout',onDocumentMouseOut,false)}function onDocumentMouseOut(event){mouseOverMode=0}function loop(){for(iT=0;iT<winMax;iT++){if(objLoaded[iT]==false)continue;if(mouseOverOn[iT]==1||rollMode[iT]=='auto'){obj[iT].rotation.x+=rollSpeedX[iT];obj[iT].rotation.y+=rollSpeedY[iT];if(mouseOverMode==0)mouseOverOn[iT]=0}if(mouse[iT]=='on'){obj[iT].rotation.x+=(targetRotationY[iT]-obj[iT].rotation.x)*0.05;obj[iT].rotation.y+=(targetRotationX[iT]-obj[iT].rotation.y)*0.05}if(newSizeOn==true)resizeCanvas(iT);if(backImg[iT]!=''){renderer[iT].autoClear=false;renderer[iT].clear();renderer[iT].render(bgScene[iT],bgCam[iT])}if(lightRotate[iT]=='on'){var time=Date.now()*0.0005;if(light1[iT]!=undefined){light1[iT].position.x=Math.sin(time*0.7)*30;light1[iT].position.y=Math.cos(time*0.5)*40;light1[iT].position.z=Math.cos(time*0.3)*30}if(light2[iT]!=undefined){light2[iT].position.x=Math.cos(time*0.3)*30;light2[iT].position.y=Math.sin(time*0.5)*40;light2[iT].position.z=Math.sin(time*0.7)*30}if(light3[iT]!=undefined){light3[iT].position.x=Math.sin(time*0.7)*30;light3[iT].position.y=Math.cos(time*0.3)*40;light3[iT].position.z=Math.sin(time*0.5)*30}if(light4[iT]!=undefined){light4[iT].position.x=Math.sin(time*0.3)*30;light4[iT].position.y=Math.cos(time*0.7)*40;light4[iT].position.z=Math.sin(time*0.5)*30}}renderer[iT].render(scene[iT],camera[iT])}newSizeOn=false;requestAnimationFrame(loop)}function debug(_t){if(debugOn==1)console.log(_t)}function easyObj(_winCount,_geo,_materials,_scale,_objColor,_texPath,_envPath,_envVal,_objAmbient,_shine){var specular=0x333333,shading=THREE.SmoothShading,material,http=new XMLHttpRequest();http.open('GET',_texPath,true);http.send();if(http.status===404){_texPath=''}switch(_geo){case 'octa':var _geometry=new THREE.OctahedronGeometry(78);break;case 'torus':var _geometry=new THREE.TorusGeometry(78,16,8);break;case 'box':var _geometry=new THREE.CubeGeometry(100,100,100);break;case 'panel':var quality=8,step=512/quality,_geometry=new THREE.PlaneGeometry(128,128,quality-1,quality-1);break;case 'ball':var _geometry=new THREE.SphereGeometry(78,32,32);break}var objTexture,cubeTextureLoader=new THREE.CubeTextureLoader(),path=_picUrl+'/canvasio3d-light/inc/env/'+_envPath+'/',format='.jpg',urls=[path+'px'+format,path+'nx'+format,path+'py'+format,path+'ny'+format,path+'pz'+format,path+'nz'+format],reflectionCube=cubeTextureLoader.load(urls);if(_texPath!=''){objTexture=THREE.ImageUtils.loadTexture(_texPath);objTexture.needsUpdate=true;objTexture.anisotropy=4}if(_objColor){var cubeMaterial1=new THREE.MeshLambertMaterial({map:objTexture,color:_objColor,envMap:reflectionCube,combine:THREE.MixOperation,reflectivity:_envVal});var cubeMaterial2=new THREE.MeshLambertMaterial({map:objTexture,color:_objColor,envMap:reflectionCube});var cubeMaterial3=new THREE.MeshLambertMaterial({map:objTexture,color:_objColor,envMap:reflectionCube,refractionRatio:0.95})}else{var cubeMaterial1=new THREE.MeshLambertMaterial({map:objTexture,color:0xff6600,envMap:reflectionCube,combine:THREE.MixOperation,reflectivity:_envVal});var cubeMaterial2=new THREE.MeshLambertMaterial({map:objTexture,color:0xffffff,envMap:reflectionCube});var cubeMaterial3=new THREE.MeshLambertMaterial({map:objTexture,color:0xffee00,envMap:reflectionCube,refractionRatio:0.95})}if(_geo=='panel')material.side=THREE.DoubleSide;obj[_winCount]=new THREE.Mesh(_geometry,cubeMaterial1);obj[_winCount].scale.multiplyScalar(_scale);obj[_winCount].position.set(0,0,0);if(shadowOn[_winCount]=='on')obj[_winCount].castShadow=true;scene[_winCount].add(obj[_winCount]);var t='3D_'+(_winCount+1),id=document.getElementById(t).childNodes[1];id.innerHTML='';objLoaded[_winCount]=true}function canvasio3dHelp(_t){var h=document.getElementById('caHelp'),p;if(h){p=h.innerHTML+'<span>'+_t+'</span><br>';h.innerHTML=p}}function objToScene(_winCount,_geometry,_materials,_scale,_objColor,_texPath,_envPath,_envVal,_objAmbient,_shine,_typ){var shading=THREE.SmoothShading,material,tempMap,col=new THREE.Color(_objColor),amb=new THREE.Color(_objAmbient),reflectionCube=null,http=new XMLHttpRequest();http.open('GET',_texPath,true);http.send();if(_shine==0)_shine=1;if(http.status===404){_texPath=''}if(_objColor==0)_objColor='';if(_envPath!=''&&_envPath!='off'&&_envVal>0){var path=_picUrl+'/canvasio3d-light/inc/env/'+_envPath+'/',format='.jpg',cubeTextureLoader=new THREE.CubeTextureLoader(),urls=[path+'px'+format,path+'nx'+format,path+'py'+format,path+'ny'+format,path+'pz'+format,path+'nz'+format],reflectionCube=cubeTextureLoader.load(urls)}else{reflectionCube=null}switch(_typ){case 'stl':if(_objAmbient==0)_objAmbient=0x888888;var specular=0x333333,_material=new THREE.MeshPhongMaterial({color:col,specular:specular,shininess:_shine,shading:shading,envMap:reflectionCube,combine:THREE.MixOperation,reflectivity:_envVal,wireframe:vector[_winCount]});centerGeometry(_geometry);obj[_winCount]=new THREE.Mesh(_geometry,_material);obj[_winCount].scale.set(_scale,_scale,_scale);obj[_winCount].position.set(0,0,0);if(shadowOn[_winCount]=='on'){obj[_winCount].castShadow=true;obj[_winCount].receiveShadow=true}scene[_winCount].add(obj[_winCount]);break;case 'obj':var centerPos=new THREE.Vector3();centerPos.x=-((objCenterStore[_winCount].x1+objCenterStore[_winCount].x2)/2);centerPos.y=-((objCenterStore[_winCount].y1+objCenterStore[_winCount].y2)/2);centerPos.z=-((objCenterStore[_winCount].z1+objCenterStore[_winCount].z2)/2);if(_texPath!=''){var objTexture=THREE.ImageUtils.loadTexture(_texPath);objTexture.needsUpdate=true;objTexture.anisotropy=4}_geometry.traverse(function(child){if(child instanceof THREE.Mesh){temp=child.material;temp.wireframe=vector[_winCount];if(temp==null)return;if(shadowOn[_winCount]=='on'){child.castShadow=true;child.receiveShadow=true}temp.transparent=true;debug;if(_objColor!=0)temp.color=col;if(_objAmbient!=0)temp.ambient=amb;if(_texPath!='')temp.map=objTexture;if(_shine!=0)temp.shininess=_shine;if(_envVal!=0){temp.envMap=reflectionCube;temp.combine=THREE.MixOperation;temp.reflectivity=_envVal}child.position.set(centerPos.x,centerPos.y,centerPos.z)}else{return}});obj[_winCount]=_geometry;obj[_winCount].scale.set(_scale,_scale,_scale);scene[_winCount].add(obj[_winCount]);break;case 'js':centerGeometry(_geometry);if(_texPath!=''){var objTexture=THREE.ImageUtils.loadTexture(_texPath);objTexture.needsUpdate=true;objTexture.anisotropy=4}material=new THREE.MeshPhongMaterial(_materials[0]);obj[_winCount]=THREE.SceneUtils.createMultiMaterialObject(_geometry,_materials);obj[_winCount].children.forEach(function(e){var mat=new THREE.MeshPhongMaterial({transparent:true,alphaTest:0.75,map:e.material.map,color:e.material.color,specular:e.material.specular,shininess:e.material.shine,shading:e.material.shading,envMap:reflectionCube,combine:THREE.MixOperation,wireframe:vector[_winCount],reflectivity:_envVal});if(_objColor!=0)mat.color=col;if(_objAmbient!=0)mat.ambient=amb;if(_texPath!='')mat.map=objTexture;if(_shine!=0)mat.shininess=_shine;if(shadowOn[_winCount]=='on'){e.castShadow=true;e.receiveShadow=true}e.material=mat});obj[_winCount].scale.multiplyScalar(_scale);obj[_winCount].position.set(0,0,0);scene[_winCount].add(obj[_winCount]);break;case 'dae':_geometry.scene.traverse(function(child){if(child instanceof THREE.Mesh&&shadowOn[_winCount]=='on'){child.castShadow=true;child.receiveShadow=true}});obj[_winCount]=_geometry.scene;obj[_winCount].scale.set(_scale,_scale,_scale);scene[_winCount].add(obj[_winCount]);break;case 'error':canvasio3dHelp('Error in Model data!');document.getElementById('caInfoLoading').style.display="none";break;default:canvasio3dHelp('Error! Maybe in the Model data?');document.getElementById('caInfoLoading').style.display="none"}var t='3D_'+(_winCount+1),id=document.getElementById(t).childNodes[1];id.innerHTML='';objLoaded[_winCount]=true;function centerGeometry(geo){geo.computeBoundingBox();var bb=geo.boundingBox,offset=new THREE.Vector3();offset.addVectors(bb.min,bb.max);offset.multiplyScalar(-0.5);geo.applyMatrix(new THREE.Matrix4().makeTranslation(offset.x,offset.y,offset.z));geo.computeBoundingBox();return geo}}function loadJS(_winCount,_objPath,_mat,_objScale,_objColor,_texturePath,_envPath,_envVal,_objAmbient,_shine){var loader4=new THREE.JSONLoader(true),p=_objPath.split('/'),temp='';for(var i=0;i<p.length-1;i++){temp=temp+p[i]+'/'}function jsProgress(_progress){var t='3D_'+(_winCount+1),id=document.getElementById(t).childNodes[1];id.innerHTML=loadingText[_winCount]+' '+_progress}loader4.loadAjaxJSON(loader4,_objPath,function(_geometry,_materials){objToScene(_winCount,_geometry,_materials,_objScale,_objColor,_texturePath,_envPath,_envVal,_objAmbient,_shine,'js')},temp,function(progress){jsProgress((progress.loaded/progress.total*100).toFixed()+'%')})}function loadOBJ(_winCount,_objPath,_mat,_objScale,_objColor,_texturePath,_envPath,_envVal,_objAmbient,_shine){var Loader1=new THREE.OBJMTLLoader();Loader1.addEventListener('load',function(event){objToScene(_winCount,event.content,'',_objScale,_objColor,_texturePath,_envPath,_envVal,_objAmbient,_shine,'obj')});Loader1.load(_objPath,_winCount)}function loadSTL(_winCount,_objPath,_mat,_objScale,_objColor,_texturePath,_envPath,_envVal,_objAmbient,_shine){var Loader2=new THREE.STLLoader();Loader2.addEventListener('load',function(event){objToScene(_winCount,event.content,'',_objScale,_objColor,_texturePath,_envPath,_envVal,_objAmbient,_shine,'stl')});Loader2.load(_objPath,_winCount)}function loadDAE(_winCount,_objPath,_mat,_objScale,_objColor,_texturePath,_envPath,_envVal,_objAmbient,_shine){var Loader3=new THREE.ColladaLoader();Loader3.addEventListener('load',function(event){objToScene(_winCount,event.content,'',_objScale,_objColor,_texturePath,_envPath,_envVal,_objAmbient,_shine,'dae')});Loader3.load(_objPath,_winCount)}function init_loader(){THREE.OBJMTLLoader=function(){};THREE.OBJMTLLoader.prototype={constructor:THREE.OBJMTLLoader,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,load:function(url,_winCount,options){var scope=this,xhr=new XMLHttpRequest(),mtlDone=false,obj3d,mtlLoader,materialsCreator,mtlfileurl=url.replace('.obj','.mtl'),mtlLoader=new THREE.MTLLoader(url.substr(0,url.lastIndexOf("/")+1),options);mtlLoader.addEventListener('load',waitReady);mtlLoader.load(mtlfileurl);function waitReady(_e){if(_e.type==='load'){if(_e.content instanceof THREE.MTLLoader.MaterialCreator){materialsCreator=_e.content;materialsCreator.preload();mtlDone=true}else{if(_e.target.status===200||_e.target.status===0){var objContent=_e.target.responseText;obj3d=scope.parse(objContent,null,_winCount);mtlDone=false}else{canvasio3dHelp('Model-File not found: '+url);document.getElementById('caInfoLoading').style.display="none"}}}if(obj3d){if(materialsCreator){obj3d.traverse(function(object){if(object instanceof THREE.Mesh){if(object.material.name){var material=materialsCreator.create(object.material.name);if(material){object.material=material}}}})}else{canvasio3dHelp('MTL-File not found: '+mtlfileurl)}scope.dispatchEvent({type:'load',content:obj3d})}}xhr.addEventListener('load',waitReady,false);xhr.winCount=_winCount;xhr.addEventListener('progress',onProgress,false);xhr.open('GET',url,true);xhr.send(null)},parse:function(data,mtllibCallback,_winCount){function groupObjCenter(_gObj,_store){_gObj.computeBoundingBox();var bb=_gObj.boundingBox,back={x1:0,x2:0,y1:0,y2:0,z1:0,z2:0};back.x1=Math.min(bb.min.x,_store.x1);back.y1=Math.min(bb.min.y,_store.y1);back.z1=Math.min(bb.min.z,_store.z1);back.x2=Math.max(bb.max.x,_store.x2);back.y2=Math.max(bb.max.y,_store.y2);back.z2=Math.max(bb.max.z,_store.z2);return back}function vector(x,y,z){return new THREE.Vector3(x,y,z)}function uv(u,v){return new THREE.Vector2(u,v)}function face3(a,b,c,normals){return new THREE.Face3(a,b,c,normals)}var face_offset=0;function meshN(meshName,materialName){if(vertices.length>0){geometry.vertices=vertices;geometry.mergeVertices();geometry.computeFaceNormals();geometry.computeBoundingSphere();object.add(mesh);objCenterStore[_winCount]=groupObjCenter(mesh.geometry,objCenterStore[_winCount]);geometry=new THREE.Geometry();mesh=new THREE.Mesh(geometry,material);verticesCount=0}if(meshName!==undefined)mesh.name=meshName;if(materialName!==undefined){material=new THREE.MeshLambertMaterial();material.name=materialName;mesh.material=material}}var group=new THREE.Object3D(),object=group,geometry=new THREE.Geometry(),material=new THREE.MeshLambertMaterial(),mesh=new THREE.Mesh(geometry,material),vertices=[],verticesCount=0,normals=[],uvs=[];function add_face(a,b,c,normals_inds){if(normals_inds===undefined){geometry.faces.push(face3(parseInt(a)-(face_offset+1),parseInt(b)-(face_offset+1),parseInt(c)-(face_offset+1)))}else{geometry.faces.push(face3(parseInt(a)-(face_offset+1),parseInt(b)-(face_offset+1),parseInt(c)-(face_offset+1),[normals[parseInt(normals_inds[0])-1].clone(),normals[parseInt(normals_inds[1])-1].clone(),normals[parseInt(normals_inds[2])-1].clone()]))}}function add_uvs(a,b,c){geometry.faceVertexUvs[0].push([uvs[parseInt(a)-1].clone(),uvs[parseInt(b)-1].clone(),uvs[parseInt(c)-1].clone()])}function handle_face_line(faces,uvs,normals_inds){if(faces[3]===undefined){add_face(faces[0],faces[1],faces[2],normals_inds);if(!(uvs===undefined)&&uvs.length>0){add_uvs(uvs[0],uvs[1],uvs[2])}}else{if(!(normals_inds===undefined)&&normals_inds.length>0){add_face(faces[0],faces[1],faces[3],[normals_inds[0],normals_inds[1],normals_inds[3]]);add_face(faces[1],faces[2],faces[3],[normals_inds[1],normals_inds[2],normals_inds[3]])}else{add_face(faces[0],faces[1],faces[3]);add_face(faces[1],faces[2],faces[3])}if(!(uvs===undefined)&&uvs.length>0){add_uvs(uvs[0],uvs[1],uvs[3]);add_uvs(uvs[1],uvs[2],uvs[3])}}}var vertex_pattern=/v( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,normal_pattern=/vn( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,uv_pattern=/vt( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,face_pattern1=/f( +\d+)( +\d+)( +\d+)( +\d+)?/,face_pattern2=/f( +(\d+)\/(\d+))( +(\d+)\/(\d+))( +(\d+)\/(\d+))( +(\d+)\/(\d+))?/,face_pattern3=/f( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))?/,face_pattern4=/f( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))?/,lines=data.split("\n");for(var i=0;i<lines.length;i++){var line=lines[i];line=line.trim();var result;if(line.length===0||line.charAt(0)==='#'){continue}else if((result=vertex_pattern.exec(line))!==null){vertices.push(vector(parseFloat(result[1]),parseFloat(result[2]),parseFloat(result[3])))}else if((result=normal_pattern.exec(line))!==null){normals.push(vector(parseFloat(result[1]),parseFloat(result[2]),parseFloat(result[3])))}else if((result=uv_pattern.exec(line))!==null){uvs.push(uv(parseFloat(result[1]),parseFloat(result[2])))}else if((result=face_pattern1.exec(line))!==null){handle_face_line([result[1],result[2],result[3],result[4]])}else if((result=face_pattern2.exec(line))!==null){handle_face_line([result[2],result[5],result[8],result[11]],[result[3],result[6],result[9],result[12]])}else if((result=face_pattern3.exec(line))!==null){handle_face_line([result[2],result[6],result[10],result[14]],[result[3],result[7],result[11],result[15]],[result[4],result[8],result[12],result[16]])}else if((result=face_pattern4.exec(line))!==null){handle_face_line([result[2],result[5],result[8],result[11]],[],[result[3],result[6],result[9],result[12]])}else if(/^o /.test(line)){meshN();face_offset=face_offset+vertices.length;vertices=[];object=new THREE.Object3D();object.name=line.substring(2).trim();group.add(object)}else if(/^g /.test(line)){meshN(line.substring(2).trim(),undefined)}else if(/^usemtl /.test(line)){meshN(undefined,line.substring(7).trim())}else if(/^mtllib /.test(line)){if(mtllibCallback){var mtlfile=line.substring(7);mtlfile=mtlfile.trim();mtllibCallback(mtlfile)}}else if(/^s /.test(line)){}else{}}meshN(undefined,undefined);return group}};THREE.STLLoader=function(){};THREE.STLLoader.prototype={constructor:THREE.STLLoader};THREE.STLLoader.prototype.load=function(url,_winCount,callback){var scope=this,xhr=new XMLHttpRequest();function onloaded(event){if(event.target.status===200||event.target.status===0){var geometry=scope.parse(event.target.response||event.target.responseText);scope.dispatchEvent({type:'load',content:geometry});if(callback)callback(geometry)}else{canvasio3dHelp('Model-File not found: '+url);document.getElementById('caInfoLoading').style.display="none"}}xhr.winCount=_winCount;xhr.addEventListener('progress',onProgress,false);xhr.addEventListener('load',onloaded,false);xhr.overrideMimeType('text/plain; charset=x-user-defined');xhr.open('GET',url,true);xhr.responseType="arraybuffer";xhr.send(null)};THREE.STLLoader.prototype.parse=function(data){var isBinary=function(){var expect,face_size,n_faces,reader;reader=new DataView(binData);face_size=(32/8*3)+((32/8*3)*3)+(16/8);n_faces=reader.getUint32(80,true);expect=80+(32/8)+(n_faces*face_size);return expect===reader.byteLength};var binData=this.ensureBinary(data);return isBinary()?this.parseBinary(binData):this.parseASCII(this.ensureString(data))};THREE.STLLoader.prototype.parseBinary=function(data){var face,geometry,n_faces,reader,length,normal,i,dataOffset,faceLength,start,vertexstart;reader=new DataView(data);n_faces=reader.getUint32(80,true);geometry=new THREE.Geometry();dataOffset=84;faceLength=12*4+2;for(face=0;face<n_faces;face++){start=dataOffset+face*faceLength;normal=new THREE.Vector3(reader.getFloat32(start,true),reader.getFloat32(start+4,true),reader.getFloat32(start+8,true));for(i=1;i<=3;i++){vertexstart=start+i*12;geometry.vertices.push(new THREE.Vector3(reader.getFloat32(vertexstart,true),reader.getFloat32(vertexstart+4,true),reader.getFloat32(vertexstart+8,true)))}length=geometry.vertices.length;geometry.faces.push(new THREE.Face3(length-3,length-2,length-1,normal))}geometry.computeBoundingSphere();return geometry};THREE.STLLoader.prototype.parseASCII=function(data){var geometry,length,normal,patternFace,patternNormal,patternVertex,result,text;geometry=new THREE.Geometry();patternFace=/facet([\s\S]*?)endfacet/g;while(((result=patternFace.exec(data))!=null)){text=result[0];patternNormal=/normal[\s]+([\-+]?[0-9]+\.?[0-9]*([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+/g;while(((result=patternNormal.exec(text))!=null)){normal=new THREE.Vector3(parseFloat(result[1]),parseFloat(result[3]),parseFloat(result[5]))}patternVertex=/vertex[\s]+([\-+]?[0-9]+\.?[0-9]*([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+/g;while(((result=patternVertex.exec(text))!=null)){geometry.vertices.push(new THREE.Vector3(parseFloat(result[1]),parseFloat(result[3]),parseFloat(result[5])))}length=geometry.vertices.length;geometry.faces.push(new THREE.Face3(length-3,length-2,length-1,normal))}geometry.computeBoundingBox();geometry.computeBoundingSphere();return geometry};THREE.STLLoader.prototype.ensureString=function(buf){if(typeof buf!=="string"){var array_buffer=new Uint8Array(buf),str='';for(var i=0;i<buf.byteLength;i++){str+=String.fromCharCode(array_buffer[i])}return str}else{return buf}};THREE.STLLoader.prototype.ensureBinary=function(buf){if(typeof buf==="string"){var array_buffer=new Uint8Array(buf.length);for(var i=0;i<buf.length;i++){array_buffer[i]=buf.charCodeAt(i)&0xff}return array_buffer.buffer||array_buffer}else{return buf}};THREE.EventDispatcher.prototype.apply(THREE.STLLoader.prototype);if(typeof DataView==='undefined'){DataView=function(buffer,byteOffset,byteLength){this.buffer=buffer;this.byteOffset=byteOffset||0;this.byteLength=byteLength||buffer.byteLength||buffer.length;this._isString=typeof buffer==="string"};DataView.prototype={_getCharCodes:function(buffer,start,length){start=start||0;length=length||buffer.length;var end=start+length,codes=[];for(var i=start;i<end;i++){codes.push(buffer.charCodeAt(i)&0xff)}return codes},_getBytes:function(length,byteOffset,littleEndian){var result;if(littleEndian===undefined){littleEndian=this._littleEndian}if(byteOffset===undefined){byteOffset=this.byteOffset}else{byteOffset=this.byteOffset+byteOffset}if(length===undefined){length=this.byteLength-byteOffset}if(typeof byteOffset!=='number'){throw new TypeError('DataView byteOffset is not a number')}if(length<0||byteOffset+length>this.byteLength){throw new Error('DataView length or (byteOffset+length) value is out of bounds')}if(this.isString){result=this._getCharCodes(this.buffer,byteOffset,byteOffset+length)}else{result=this.buffer.slice(byteOffset,byteOffset+length)}if(!littleEndian&&length>1){if(!(result instanceof Array)){result=Array.prototype.slice.call(result)}result.reverse()}return result},getFloat64:function(byteOffset,littleEndian){var b=this._getBytes(8,byteOffset,littleEndian),sign=1-(2*(b[7]>>7)),exponent=((((b[7]<<1)&0xff)<<3)|(b[6]>>4))-((1<<10)-1),mantissa=((b[6]&0x0f)*Math.pow(2,48))+(b[5]*Math.pow(2,40))+(b[4]*Math.pow(2,32))+(b[3]*Math.pow(2,24))+(b[2]*Math.pow(2,16))+(b[1]*Math.pow(2,8))+b[0];if(exponent===1024){if(mantissa!==0){return NaN}else{return sign*Infinity}}if(exponent===-1023){return sign*mantissa*Math.pow(2,-1022-52)}return sign*(1+mantissa*Math.pow(2,-52))*Math.pow(2,exponent)},getFloat32:function(byteOffset,littleEndian){var b=this._getBytes(4,byteOffset,littleEndian),sign=1-(2*(b[3]>>7)),exponent=(((b[3]<<1)&0xff)|(b[2]>>7))-127,mantissa=((b[2]&0x7f)<<16)|(b[1]<<8)|b[0];if(exponent===128){if(mantissa!==0){return NaN}else{return sign*Infinity}}if(exponent===-127){return sign*mantissa*Math.pow(2,-126-23)}return sign*(1+mantissa*Math.pow(2,-23))*Math.pow(2,exponent)},getInt32:function(byteOffset,littleEndian){var b=this._getBytes(4,byteOffset,littleEndian);return(b[3]<<24)|(b[2]<<16)|(b[1]<<8)|b[0]},getUint32:function(byteOffset,littleEndian){return this.getInt32(byteOffset,littleEndian)>>>0},getInt16:function(byteOffset,littleEndian){return(this.getUint16(byteOffset,littleEndian)<<16)>>16},getUint16:function(byteOffset,littleEndian){var b=this._getBytes(2,byteOffset,littleEndian);return(b[1]<<8)|b[0]},getInt8:function(byteOffset){return(this.getUint8(byteOffset)<<24)>>24},getUint8:function(byteOffset){return this._getBytes(1,byteOffset)[0]}}}THREE.ColladaLoader=function(){};THREE.ColladaLoader.prototype={constructor:THREE.ColladaLoader,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent};var COLLADA=null,scene=null,daeScene,readyCallbackFunc=null,sources={},images={},animations={},controllers={},geometries={},materials={},effects={},cameras={},lights={},animData,visualScenes,baseUrl,morphs,skins,flip_uv=true,preferredShading=THREE.SmoothShading,options={centerGeometry:true,convertUpAxis:true,subdivideFaces:false,upAxis:'Y',defaultEnvMap:null};THREE.ColladaLoader.prototype.load=function(_url,_winCount){var scope=this,daeLdr=new XMLHttpRequest(),callBack;function onloaded(event){if(event.target.status===200||event.target.status===0){if(daeLdr.responseXML){var _geometry=parseCollada(daeLdr.responseXML,undefined,_url);scope.dispatchEvent({type:'load',content:_geometry})}else if(daeLdr.responseText){var xmlParser=new DOMParser(),responseXML=xmlParser.parseFromString(daeLdr.responseText,"application/xml"),_geometry=parseCollada(responseXML,undefined,_url);scope.dispatchEvent({type:'load',content:_geometry})}}else{scope.dispatchEvent({type:'error',message:'Couldn\'t load URL ['+_url+']',response:event.target.responseText})}daeLdr.removeEventListener('load',onloaded,false)}daeLdr.winCount=_winCount;daeLdr.addEventListener('progress',onProgress,false);daeLdr.addEventListener('load',onloaded,false);daeLdr.overrideMimeType('text/plain; charset=x-user-defined');daeLdr.open('GET',_url,true);daeLdr.send(null)};function parseCollada(doc,callBack,url){COLLADA=doc;callBack=callBack||readyCallbackFunc;if(url!==undefined){var parts=url.split('/');parts.pop();baseUrl=(parts.length<1?'.':parts.join('/'))+'/'}parseAsset();setUpConversion();images=parseLib("//dae:library_images/dae:image",_Image,"image");materials=parseLib("//dae:library_materials/dae:material",Material,"material");effects=parseLib("//dae:library_effects/dae:effect",Effect,"effect");geometries=parseLib("//dae:library_geometries/dae:geometry",Geometry,"geometry");cameras=parseLib(".//dae:library_cameras/dae:camera",Camera,"camera");lights=parseLib(".//dae:library_lights/dae:light",Light,"light");controllers=parseLib("//dae:library_controllers/dae:controller",Controller,"controller");animations=parseLib("//dae:library_animations/dae:animation",Animation,"animation");visualScenes=parseLib(".//dae:library_visual_scenes/dae:visual_scene",VisualScene,"visual_scene");morphs=[];skins=[];daeScene=parseScene();scene=new THREE.Object3D();for(var i=0;i<daeScene.nodes.length;i++){scene.add(createSceneGraph(daeScene.nodes[i]))}scene.scale.multiplyScalar(colladaUnit);createAnimations();var result={scene:scene,morphs:morphs,skins:skins,animations:animData,dae:{images:images,materials:materials,cameras:cameras,lights:lights,effects:effects,geometries:geometries,controllers:controllers,animations:animations,visualScenes:visualScenes,scene:daeScene}};if(callBack){callBack(result)}return result}function setPreferredShading(shading){preferredShading=shading}function parseAsset(){var elements=COLLADA.evaluate('//dae:asset',COLLADA,_nsResolver,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null),element=elements.iterateNext();if(element&&element.childNodes){for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];switch(child.nodeName){case 'unit':var meter=child.getAttribute('meter');if(meter){colladaUnit=parseFloat(meter)}break;case 'up_axis':colladaUp=child.textContent.charAt(0);break}}}}function parseLib(q,classSpec,prefix){var elements=COLLADA.evaluate(q,COLLADA,_nsResolver,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null),lib={},element=elements.iterateNext(),i=0;while(element){var daeElement=(new classSpec()).parse(element);if(!daeElement.id||daeElement.id.length==0)daeElement.id=prefix+(i++);lib[daeElement.id]=daeElement;element=elements.iterateNext()}return lib}function parseScene(){var sceneElement=COLLADA.evaluate('.//dae:scene/dae:instance_visual_scene',COLLADA,_nsResolver,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext();if(sceneElement){var url=sceneElement.getAttribute('url').replace(/^#/,'');return visualScenes[url.length>0?url:'visual_scene0']}else{return null}}function createAnimations(){animData=[];recurseHierarchy(scene)}function recurseHierarchy(node){var n=daeScene.getChildById(node.name,true),newData=null;if(n&&n.keys){newData={fps:60,hierarchy:[{node:n,keys:n.keys,sids:n.sids}],node:node,name:'animation_'+node.name,length:0};animData.push(newData);for(var i=0,il=n.keys.length;i<il;i++){newData.length=Math.max(newData.length,n.keys[i].time)}}else{newData={hierarchy:[{keys:[],sids:[]}]};}for(var i=0,il=node.children.length;i<il;i++){var d=recurseHierarchy(node.children[i]);for(var j=0,jl=d.hierarchy.length;j<jl;j++){newData.hierarchy.push({keys:[],sids:[]})}}return newData}function calcAnimationBounds(){var start=1000000,end=-start,frames=0;for(var id in animations){var animation=animations[id];for(var i=0;i<animation.sampler.length;i++){var sampler=animation.sampler[i];sampler.create();start=Math.min(start,sampler.startTime);end=Math.max(end,sampler.endTime);frames=Math.max(frames,sampler.input.length)}}return{start:start,end:end,frames:frames}}function createMorph(geometry,ctrl){var morphCtrl=ctrl instanceof InstanceController?controllers[ctrl.url]:ctrl;if(!morphCtrl||!morphCtrl.morph){console.log("could not find morph controller!");return}var morph=morphCtrl.morph;for(var i=0;i<morph.targets.length;i++){var target_id=morph.targets[i],daeGeometry=geometries[target_id];if(!daeGeometry.mesh||!daeGeometry.mesh.primitives||!daeGeometry.mesh.primitives.length){continue}var target=daeGeometry.mesh.primitives[0].geometry;if(target.vertices.length===geometry.vertices.length){geometry.morphTargets.push({name:"target_1",vertices:target.vertices})}}geometry.morphTargets.push({name:"target_Z",vertices:geometry.vertices})}function createSkin(geometry,ctrl,applyBindShape){var skinCtrl=controllers[ctrl.url];if(!skinCtrl||!skinCtrl.skin){console.log("could not find skin controller!");return}if(!ctrl.skeleton||!ctrl.skeleton.length){console.log("could not find the skeleton for the skin!");return}var skin=skinCtrl.skin,skeleton=daeScene.getChildById(ctrl.skeleton[0]),hierarchy=[];applyBindShape=applyBindShape!==undefined?applyBindShape:true;var bones=[];geometry.skinWeights=[];geometry.skinIndices=[];if(applyBindShape){for(var i=0;i<geometry.vertices.length;i++){geometry.vertices[i].applyMatrix4(skin.bindShapeMatrix)}}}function setupSkeleton(node,bones,frame,parent){node.world=node.world||new THREE.Matrix4();node.world.copy(node.matrix);if(node.channels&&node.channels.length){var channel=node.channels[0],m=channel.sampler.output[frame];if(m instanceof THREE.Matrix4){node.world.copy(m)}}if(parent){node.world.multiplyMatrices(parent,node.world)}bones.push(node);for(var i=0;i<node.nodes.length;i++){setupSkeleton(node.nodes[i],bones,frame,node.world)}}function setupSkinningMatrices(bones,skin){for(var i=0;i<bones.length;i++){var bone=bones[i],found=-1;if(bone.type!='JOINT')continue;for(var j=0;j<skin.joints.length;j++){if(bone.sid==skin.joints[j]){found=j;break}}if(found>=0){var inv=skin.invBindMatrices[found];bone.invBindMatrix=inv;bone.skinningMatrix=new THREE.Matrix4();bone.skinningMatrix.multiplyMatrices(bone.world,inv);bone.weights=[];for(var j=0;j<skin.weights.length;j++){for(var k=0;k<skin.weights[j].length;k++){var w=skin.weights[j][k];if(w.joint==found){bone.weights.push(w)}}}}else{throw 'ColladaLoader: Could not find joint \''+bone.sid+'\'.'}}}function applySkin(geometry,instanceCtrl,frame){var skinController=controllers[instanceCtrl.url];frame=frame!==undefined?frame:40;if(!skinController||!skinController.skin){console.log('ColladaLoader: Could not find skin controller.');return}if(!instanceCtrl.skeleton||!instanceCtrl.skeleton.length){console.log('ColladaLoader: Could not find the skeleton for the skin. ');return}var animationBounds=calcAnimationBounds(),skeleton=daeScene.getChildById(instanceCtrl.skeleton[0],true)||daeScene.getChildBySid(instanceCtrl.skeleton[0],true),i,j,w,vidx,weight,v=new THREE.Vector3(),o,s;for(i=0;i<geometry.vertices.length;i++){geometry.vertices[i].applyMatrix4(skinController.skin.bindShapeMatrix)}for(frame=0;frame<animationBounds.frames;frame++){var bones=[],skinned=[];for(i=0;i<geometry.vertices.length;i++){skinned.push(new THREE.Vector3())}setupSkeleton(skeleton,bones,frame);setupSkinningMatrices(bones,skinController.skin);for(i=0;i<bones.length;i++){if(bones[i].type!='JOINT')continue;for(j=0;j<bones[i].weights.length;j++){w=bones[i].weights[j];vidx=w.index;weight=w.weight;o=geometry.vertices[vidx];s=skinned[vidx];v.x=o.x;v.y=o.y;v.z=o.z;v.applyMatrix4(bones[i].skinningMatrix);s.x+=(v.x*weight);s.y+=(v.y*weight);s.z+=(v.z*weight)}}geometry.morphTargets.push({name:"target_"+frame,vertices:skinned})}}function createSceneGraph(node,parent){var obj=new THREE.Object3D(),skinned=false,skinController,morphController,i,j;for(i=0;i<node.controllers.length;i++){var controller=controllers[node.controllers[i].url];switch(controller.type){case 'skin':if(geometries[controller.skin.source]){var inst_geom=new InstanceGeometry();inst_geom.url=controller.skin.source;inst_geom.instance_material=node.controllers[i].instance_material;node.geometries.push(inst_geom);skinned=true;skinController=node.controllers[i]}else if(controllers[controller.skin.source]){var second=controllers[controller.skin.source];morphController=second;if(second.morph&&geometries[second.morph.source]){var inst_geom=new InstanceGeometry();inst_geom.url=second.morph.source;inst_geom.instance_material=node.controllers[i].instance_material;node.geometries.push(inst_geom)}}break;case 'morph':if(geometries[controller.morph.source]){var inst_geom=new InstanceGeometry();inst_geom.url=controller.morph.source;inst_geom.instance_material=node.controllers[i].instance_material;node.geometries.push(inst_geom);morphController=node.controllers[i]}console.log('ColladaLoader: Morph-controller partially supported.');default:break}}var double_sided_materials={};for(i=0;i<node.geometries.length;i++){var instance_geometry=node.geometries[i],instance_materials=instance_geometry.instance_material,geometry=geometries[instance_geometry.url],used_materials={},used_materials_array=[],num_materials=0,first_material;if(geometry){if(!geometry.mesh||!geometry.mesh.primitives)continue;if(obj.name.length==0){obj.name=geometry.id}if(instance_materials){for(j=0;j<instance_materials.length;j++){var instance_material=instance_materials[j],mat=materials[instance_material.target],effect_id=mat.instance_effect.url,shader=effects[effect_id].shader,material3js=shader.material;if(geometry.doubleSided){if(!(instance_material.symbol in double_sided_materials)){var _copied_material=material3js.clone();_copied_material.side=THREE.DoubleSide;double_sided_materials[instance_material.symbol]=_copied_material}material3js=double_sided_materials[instance_material.symbol]}material3js.opacity=!material3js.opacity?1:material3js.opacity;used_materials[instance_material.symbol]=num_materials;used_materials_array.push(material3js);first_material=material3js;first_material.name=mat.name==null||mat.name===''?mat.id:mat.name;num_materials++}}var mesh,material=first_material||new THREE.MeshLambertMaterial({color:0xdddddd,shading:THREE.FlatShading,side:geometry.doubleSided?THREE.DoubleSide:THREE.FrontSide});var geom=geometry.mesh.geometry3js;if(num_materials>1){material=new THREE.MeshFaceMaterial(used_materials_array);for(j=0;j<geom.faces.length;j++){var face=geom.faces[j];face.materialIndex=used_materials[face.daeMaterial]}}if(skinController!==undefined){applySkin(geom,skinController);material.morphTargets=true;mesh=new THREE.SkinnedMesh(geom,material,false);mesh.skinController=controllers[skinController.url];mesh.skinInstanceController=skinController;mesh.name='skin_'+skins.length;skins.push(mesh)}else if(morphController!==undefined){createMorph(geom,morphController);material.morphTargets=true;mesh=new THREE.Mesh(geom,material);mesh.name='morph_'+morphs.length;morphs.push(mesh)}else{mesh=new THREE.Mesh(geom,material)}node.geometries.length>1?obj.add(mesh):obj=mesh}}for(i=0;i<node.cameras.length;i++){var instance_camera=node.cameras[i],cparams=cameras[instance_camera.url];obj=new THREE.PerspectiveCamera(cparams.fov,parseFloat(cparams.aspect_ratio),parseFloat(cparams.znear),parseFloat(cparams.zfar))}for(i=0;i<node.lights.length;i++){var instance_light=node.lights[i],lparams=lights[instance_light.url];if(lparams&&lparams.technique){var color=lparams.color.getHex(),intensity=lparams.intensity,distance=0,angle=lparams.falloff_angle,exponent;switch(lparams.technique){case 'directional':obj=new THREE.DirectionalLight(color,intensity,distance);break;case 'point':obj=new THREE.PointLight(color,intensity,distance);break;case 'spot':obj=new THREE.SpotLight(color,intensity,distance,angle,exponent);break;case 'ambient':obj=new THREE.AmbientLight(color);break}}}obj.name=node.name||node.id||"";obj.matrix=node.matrix;obj.matrix.decompose(obj.position,obj.quaternion,obj.scale);if(options.centerGeometry&&obj.geometry){var geo=obj.geometry;geo.computeBoundingBox();var bb=geo.boundingBox,offset=new THREE.Vector3();offset.addVectors(bb.min,bb.max);offset.multiplyScalar(-0.5);geo.applyMatrix(new THREE.Matrix4().makeTranslation(offset.x,offset.y,offset.z));geo.computeBoundingBox()}for(i=0;i<node.nodes.length;i++){obj.add(createSceneGraph(node.nodes[i],node))}return obj}function getJointId(skin,id){for(var i=0;i<skin.joints.length;i++){if(skin.joints[i]==id){return i}}}function getLibraryNode(id){return COLLADA.evaluate('.//dae:library_nodes//dae:node[@id=\''+id+'\']',COLLADA,_nsResolver,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext()}function getChannelsForNode(node){var channels=[],startTime=1000000,endTime=-1000000;for(var id in animations){var animation=animations[id];for(var i=0;i<animation.channel.length;i++){var channel=animation.channel[i],sampler=animation.sampler[i],id=channel.target.split('/')[0];if(id==node.id){sampler.create();channel.sampler=sampler;startTime=Math.min(startTime,sampler.startTime);endTime=Math.max(endTime,sampler.endTime);channels.push(channel)}}}if(channels.length){node.startTime=startTime;node.endTime=endTime}return channels}function calcFrameDuration(node){var minT=10000000;for(var i=0;i<node.channels.length;i++){var sampler=node.channels[i].sampler;for(var j=0;j<sampler.input.length-1;j++){var t0=sampler.input[j],t1=sampler.input[j+1];minT=Math.min(minT,t1-t0)}}return minT}function calcMatrixAt(node,t){var animated={},i,j;for(i=0;i<node.channels.length;i++){var channel=node.channels[i];animated[channel.sid]=channel}var matrix=new THREE.Matrix4();for(i=0;i<node.transforms.length;i++){var transform=node.transforms[i],channel=animated[transform.sid];if(channel!==undefined){var sampler=channel.sampler,value;for(j=0;j<sampler.input.length-1;j++){if(sampler.input[j+1]>t){value=sampler.output[j];break}}if(value!==undefined){if(value instanceof THREE.Matrix4){matrix.multiplyMatrices(matrix,value)}else{matrix.multiplyMatrices(matrix,transform.matrix)}}else{matrix.multiplyMatrices(matrix,transform.matrix)}}else{matrix.multiplyMatrices(matrix,transform.matrix)}}return matrix}function bakeAnimations(node){if(node.channels&&node.channels.length){var keys=[],sids=[];for(var i=0,il=node.channels.length;i<il;i++){var channel=node.channels[i],fullSid=channel.fullSid,sampler=channel.sampler,input=sampler.input,transform=node.getTransformBySid(channel.sid),member;if(channel.arrIndices){member=[];for(var j=0,jl=channel.arrIndices.length;j<jl;j++){member[j]=getConvertedIndex(channel.arrIndices[j])}}else{member=getConvertedMember(channel.member)}if(transform){if(sids.indexOf(fullSid)===-1){sids.push(fullSid)}for(var j=0,jl=input.length;j<jl;j++){var time=input[j],data=sampler.getData(transform.type,j),key=findKey(keys,time);if(!key){key=new Key(time);var timeNdx=findTimeNdx(keys,time);keys.splice(timeNdx==-1?keys.length:timeNdx,0,key)}key.addTarget(fullSid,transform,member,data)}}else{console.log('Could not find transform "'+channel.sid+'" in node '+node.id)}}for(var i=0;i<sids.length;i++){var sid=sids[i];for(var j=0;j<keys.length;j++){var key=keys[j];if(!key.hasTarget(sid)){interpolateKeys(keys,key,j,sid)}}}node.keys=keys;node.sids=sids}}function findKey(keys,time){var retVal=null;for(var i=0,il=keys.length;i<il&&retVal==null;i++){var key=keys[i];if(key.time===time){retVal=key}else if(key.time>time){break}}return retVal}function findTimeNdx(keys,time){var ndx=-1;for(var i=0,il=keys.length;i<il&&ndx==-1;i++){var key=keys[i];if(key.time>=time){ndx=i}}return ndx}function interpolateKeys(keys,key,ndx,fullSid){var prevKey=getPrevKeyWith(keys,fullSid,ndx?ndx-1:0),nextKey=getNextKeyWith(keys,fullSid,ndx+1);if(prevKey&&nextKey){var scale=(key.time-prevKey.time)/(nextKey.time-prevKey.time),prevTarget=prevKey.getTarget(fullSid),nextData=nextKey.getTarget(fullSid).data,prevData=prevTarget.data,data;if(prevTarget.type==='matrix'){data=prevData}else if(prevData.length){data=[];for(var i=0;i<prevData.length;++i){data[i]=prevData[i]+(nextData[i]-prevData[i])*scale}}else{data=prevData+(nextData-prevData)*scale}key.addTarget(fullSid,prevTarget.transform,prevTarget.member,data)}}function getNextKeyWith(keys,fullSid,ndx){for(;ndx<keys.length;ndx++){var key=keys[ndx];if(key.hasTarget(fullSid)){return key}}return null}function getPrevKeyWith(keys,fullSid,ndx){ndx=ndx>=0?ndx:ndx+keys.length;for(;ndx>=0;ndx--){var key=keys[ndx];if(key.hasTarget(fullSid)){return key}}return null}function _Image(){this.id="";this.init_from=""}_Image.prototype.parse=function(element){this.id=element.getAttribute('id');for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeName=='init_from'){this.init_from=child.textContent}}return this};function Controller(){this.id="";this.name="";this.type="";this.skin=null;this.morph=null}Controller.prototype.parse=function(element){this.id=element.getAttribute('id');this.name=element.getAttribute('name');this.type="none";for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];switch(child.nodeName){case 'skin':this.skin=(new Skin()).parse(child);this.type=child.nodeName;break;case 'morph':this.morph=(new Morph()).parse(child);this.type=child.nodeName;break;default:break}}return this};function Morph(){this.method=null;this.source=null;this.targets=null;this.weights=null}Morph.prototype.parse=function(element){var sources={},inputs=[],i;this.method=element.getAttribute('method');this.source=element.getAttribute('source').replace(/^#/,'');for(i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'source':var source=(new Source()).parse(child);sources[source.id]=source;break;case 'targets':inputs=this.parseInputs(child);break;default:console.log(child.nodeName);break}}for(i=0;i<inputs.length;i++){var input=inputs[i],source=sources[input.source];switch(input.semantic){case 'MORPH_TARGET':this.targets=source.read();break;case 'MORPH_WEIGHT':this.weights=source.read();break;default:break}}return this};Morph.prototype.parseInputs=function(element){var inputs=[];for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'input':inputs.push((new Input()).parse(child));break;default:break}}return inputs};function Skin(){this.source="";this.bindShapeMatrix=null;this.invBindMatrices=[];this.joints=[];this.weights=[]}Skin.prototype.parse=function(element){var sources={},joints,weights;this.source=element.getAttribute('source').replace(/^#/,'');this.invBindMatrices=[];this.joints=[];this.weights=[];for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'bind_shape_matrix':var f=_floats(child.textContent);this.bindShapeMatrix=getConvertedMat4(f);break;case 'source':var src=new Source().parse(child);sources[src.id]=src;break;case 'joints':joints=child;break;case 'vertex_weights':weights=child;break;default:console.log(child.nodeName);break}}this.parseJoints(joints,sources);this.parseWeights(weights,sources);return this};Skin.prototype.parseJoints=function(element,sources){for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'input':var input=(new Input()).parse(child),source=sources[input.source];if(input.semantic=='JOINT'){this.joints=source.read()}else if(input.semantic=='INV_BIND_MATRIX'){this.invBindMatrices=source.read()}break;default:break}}};Skin.prototype.parseWeights=function(element,sources){var v,vcount,inputs=[];for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'input':inputs.push((new Input()).parse(child));break;case 'v':v=_ints(child.textContent);break;case 'vcount':vcount=_ints(child.textContent);break;default:break}}var index=0;for(var i=0;i<vcount.length;i++){var numBones=vcount[i],vertex_weights=[];for(var j=0;j<numBones;j++){var influence={};for(var k=0;k<inputs.length;k++){var input=inputs[k],value=v[index+input.offset];switch(input.semantic){case 'JOINT':influence.joint=value;break;case 'WEIGHT':influence.weight=sources[input.source].data[value];break;default:break}}vertex_weights.push(influence);index+=inputs.length}for(var j=0;j<vertex_weights.length;j++){vertex_weights[j].index=i}this.weights.push(vertex_weights)}};function VisualScene(){this.id="";this.name="";this.nodes=[];this.scene=new THREE.Object3D()}VisualScene.prototype.getChildById=function(id,recursive){for(var i=0;i<this.nodes.length;i++){var node=this.nodes[i].getChildById(id,recursive);if(node){return node}}return null};VisualScene.prototype.getChildBySid=function(sid,recursive){for(var i=0;i<this.nodes.length;i++){var node=this.nodes[i].getChildBySid(sid,recursive);if(node){return node}}return null};VisualScene.prototype.parse=function(element){this.id=element.getAttribute('id');this.name=element.getAttribute('name');this.nodes=[];for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'node':this.nodes.push((new Node()).parse(child));break;default:break}}return this};function Node(){this.id="";this.name="";this.sid="";this.nodes=[];this.controllers=[];this.transforms=[];this.geometries=[];this.channels=[];this.matrix=new THREE.Matrix4()}Node.prototype.getChannelForTransform=function(transformSid){for(var i=0;i<this.channels.length;i++){var channel=this.channels[i],parts=channel.target.split('/'),id=parts.shift(),sid=parts.shift(),dotSyntax=(sid.indexOf(".")>=0),arrSyntax=(sid.indexOf("(")>=0),arrIndices,member;if(dotSyntax){parts=sid.split(".");sid=parts.shift();member=parts.shift()}else if(arrSyntax){arrIndices=sid.split("(");sid=arrIndices.shift();for(var j=0;j<arrIndices.length;j++){arrIndices[j]=parseInt(arrIndices[j].replace(/\)/,''))}}if(sid==transformSid){channel.info={sid:sid,dotSyntax:dotSyntax,arrSyntax:arrSyntax,arrIndices:arrIndices};return channel}}return null};Node.prototype.getChildById=function(id,recursive){if(this.id==id){return this}if(recursive){for(var i=0;i<this.nodes.length;i++){var n=this.nodes[i].getChildById(id,recursive);if(n){return n}}}return null};Node.prototype.getChildBySid=function(sid,recursive){if(this.sid==sid){return this}if(recursive){for(var i=0;i<this.nodes.length;i++){var n=this.nodes[i].getChildBySid(sid,recursive);if(n){return n}}}return null};Node.prototype.getTransformBySid=function(sid){for(var i=0;i<this.transforms.length;i++){if(this.transforms[i].sid==sid)return this.transforms[i]}return null};Node.prototype.parse=function(element){var url;this.id=element.getAttribute('id');this.sid=element.getAttribute('sid');this.name=element.getAttribute('name');this.type=element.getAttribute('type');this.type=this.type=='JOINT'?this.type:'NODE';this.nodes=[];this.transforms=[];this.geometries=[];this.cameras=[];this.lights=[];this.controllers=[];this.matrix=new THREE.Matrix4();for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'node':this.nodes.push((new Node()).parse(child));break;case 'instance_camera':this.cameras.push((new InstanceCamera()).parse(child));break;case 'instance_controller':this.controllers.push((new InstanceController()).parse(child));break;case 'instance_geometry':this.geometries.push((new InstanceGeometry()).parse(child));break;case 'instance_light':this.lights.push((new InstanceLight()).parse(child));break;case 'instance_node':url=child.getAttribute('url').replace(/^#/,'');var iNode=getLibraryNode(url);if(iNode){this.nodes.push((new Node()).parse(iNode))}break;case 'rotate':case 'translate':case 'scale':case 'matrix':case 'lookat':case 'skew':this.transforms.push((new Transform()).parse(child));break;case 'extra':break;default:console.log(child.nodeName);break}}this.channels=getChannelsForNode(this);bakeAnimations(this);this.updateMatrix();return this};Node.prototype.updateMatrix=function(){this.matrix.identity();for(var i=0;i<this.transforms.length;i++){this.transforms[i].apply(this.matrix)}};function Transform(){this.sid="";this.type="";this.data=[];this.obj=null}Transform.prototype.parse=function(element){this.sid=element.getAttribute('sid');this.type=element.nodeName;this.data=_floats(element.textContent);this.convert();return this};Transform.prototype.convert=function(){switch(this.type){case 'matrix':this.obj=getConvertedMat4(this.data);break;case 'rotate':this.angle=THREE.Math.degToRad(this.data[3]);case 'translate':fixCoords(this.data,-1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;case 'scale':fixCoords(this.data,1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;default:console.log('Can not convert Transform of type '+this.type);break}};Transform.prototype.apply=function(){var m1=new THREE.Matrix4();return function(matrix){switch(this.type){case 'matrix':matrix.multiply(this.obj);break;case 'translate':matrix.multiply(m1.makeTranslation(this.obj.x,this.obj.y,this.obj.z));break;case 'rotate':matrix.multiply(m1.makeRotationAxis(this.obj,this.angle));break;case 'scale':matrix.scale(this.obj);break}}}();Transform.prototype.update=function(data,member){var members=['X','Y','Z','ANGLE'];switch(this.type){case 'matrix':if(!member){this.obj.copy(data)}else if(member.length===1){switch(member[0]){case 0:this.obj.n11=data[0];this.obj.n21=data[1];this.obj.n31=data[2];this.obj.n41=data[3];break;case 1:this.obj.n12=data[0];this.obj.n22=data[1];this.obj.n32=data[2];this.obj.n42=data[3];break;case 2:this.obj.n13=data[0];this.obj.n23=data[1];this.obj.n33=data[2];this.obj.n43=data[3];break;case 3:this.obj.n14=data[0];this.obj.n24=data[1];this.obj.n34=data[2];this.obj.n44=data[3];break}}else if(member.length===2){var propName='n'+(member[0]+1)+(member[1]+1);this.obj[propName]=data}else{console.log('Incorrect addressing of matrix in transform.')}break;case 'translate':case 'scale':if(Object.prototype.toString.call(member)==='[object Array]'){member=members[member[0]]}switch(member){case 'X':this.obj.x=data;break;case 'Y':this.obj.y=data;break;case 'Z':this.obj.z=data;break;default:this.obj.x=data[0];this.obj.y=data[1];this.obj.z=data[2];break}break;case 'rotate':if(Object.prototype.toString.call(member)==='[object Array]'){member=members[member[0]]}switch(member){case 'X':this.obj.x=data;break;case 'Y':this.obj.y=data;break;case 'Z':this.obj.z=data;break;case 'ANGLE':this.angle=THREE.Math.degToRad(data);break;default:this.obj.x=data[0];this.obj.y=data[1];this.obj.z=data[2];this.angle=THREE.Math.degToRad(data[3]);break}break}};function InstanceController(){this.url="";this.skeleton=[];this.instance_material=[]}InstanceController.prototype.parse=function(element){this.url=element.getAttribute('url').replace(/^#/,'');this.skeleton=[];this.instance_material=[];for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case 'skeleton':this.skeleton.push(child.textContent.replace(/^#/,''));break;case 'bind_material':var instances=COLLADA.evaluate('.//dae:instance_material',child,_nsResolver,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);if(instances){var instance=instances.iterateNext();while(instance){this.instance_material.push((new InstanceMaterial()).parse(instance));instance=instances.iterateNext()}}break;case 'extra':break;default:break}}return this};function InstanceMaterial(){this.symbol="";this.target=""}InstanceMaterial.prototype.parse=function(element){this.symbol=element.getAttribute('symbol');this.target=element.getAttribute('target').replace(/^#/,'');return this};function InstanceGeometry(){this.url="";this.instance_material=[]}InstanceGeometry.prototype.parse=function(element){this.url=element.getAttribute('url').replace(/^#/,'');this.instance_material=[];for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;if(child.nodeName=='bind_material'){var instances=COLLADA.evaluate('.//dae:instance_material',child,_nsResolver,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);if(instances){var instance=instances.iterateNext();while(instance){this.instance_material.push((new InstanceMaterial()).parse(instance));instance=instances.iterateNext()}}break}}return this};function Geometry(){this.id="";this.mesh=null}Geometry.prototype.parse=function(element){this.id=element.getAttribute('id');extractDoubleSided(this,element);for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];switch(child.nodeName){case 'mesh':this.mesh=(new Mesh(this)).parse(child);break;case 'extra':break;default:break}}return this};function Mesh(geometry){this.geometry=geometry.id;this.primitives=[];this.vertices=null;this.geometry3js=null}Mesh.prototype.parse=function(element){this.primitives=[];var i,j;for(i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];switch(child.nodeName){case 'source':_source(child);break;case 'vertices':this.vertices=(new Vertices()).parse(child);break;case 'triangles':this.primitives.push((new Triangles().parse(child)));break;case 'polygons':this.primitives.push((new Polygons().parse(child)));break;case 'polylist':this.primitives.push((new Polylist().parse(child)));break;default:break}}this.geometry3js=new THREE.Geometry();var vertexData=sources[this.vertices.input['POSITION'].source].data;for(i=0;i<vertexData.length;i+=3){this.geometry3js.vertices.push(getConvertedVec3(vertexData,i).clone())}for(i=0;i<this.primitives.length;i++){var primitive=this.primitives[i];primitive.setVertices(this.vertices);this.handlePrimitive(primitive,this.geometry3js)}this.geometry3js.computeFaceNormals();if(this.geometry3js.calcNormals){this.geometry3js.computeVertexNormals();delete this.geometry3js.calcNormals}this.geometry3js.computeBoundingBox();return this};Mesh.prototype.handlePrimitive=function(primitive,geom){var j,k,pList=primitive.p,inputs=primitive.inputs,input,index,idx32,source,numParams,vcIndex=0,vcount=3,maxOffset=0,texture_sets=[];for(j=0;j<inputs.length;j++){input=inputs[j];var offset=input.offset+1;maxOffset=(maxOffset<offset)?offset:maxOffset;switch(input.semantic){case 'TEXCOORD':texture_sets.push(input.set);break}}for(var pCount=0;pCount<pList.length;++pCount){var p=pList[pCount],i=0;while(i<p.length){var vs=[],ns=[],ts=null,cs=[];if(primitive.vcount){vcount=primitive.vcount.length?primitive.vcount[vcIndex++]:primitive.vcount}else{vcount=p.length/maxOffset}for(j=0;j<vcount;j++){for(k=0;k<inputs.length;k++){input=inputs[k];source=sources[input.source];index=p[i+(j*maxOffset)+input.offset];numParams=source.accessor.params.length;idx32=index*numParams;switch(input.semantic){case 'VERTEX':vs.push(index);break;case 'NORMAL':ns.push(getConvertedVec3(source.data,idx32));break;case 'TEXCOORD':ts=ts||{};if(ts[input.set]===undefined)ts[input.set]=[];ts[input.set].push(new THREE.Vector2(source.data[idx32],source.data[idx32+1]));break;case 'COLOR':cs.push(new THREE.Color().setRGB(source.data[idx32],source.data[idx32+1],source.data[idx32+2]));break;default:break}}}if(ns.length==0){input=this.vertices.input.NORMAL;if(input){source=sources[input.source];numParams=source.accessor.params.length;for(var ndx=0,len=vs.length;ndx<len;ndx++){ns.push(getConvertedVec3(source.data,vs[ndx]*numParams))}}else{geom.calcNormals=true}}if(!ts){ts={};input=this.vertices.input.TEXCOORD;if(input){texture_sets.push(input.set);source=sources[input.source];numParams=source.accessor.params.length;for(var ndx=0,len=vs.length;ndx<len;ndx++){idx32=vs[ndx]*numParams;if(ts[input.set]===undefined)ts[input.set]=[];ts[input.set].push(new THREE.Vector2(source.data[idx32],1.0-source.data[idx32+1]))}}}if(cs.length==0){input=this.vertices.input.COLOR;if(input){source=sources[input.source];numParams=source.accessor.params.length;for(var ndx=0,len=vs.length;ndx<len;ndx++){idx32=vs[ndx]*numParams;cs.push(new THREE.Color().setRGB(source.data[idx32],source.data[idx32+1],source.data[idx32+2]))}}}var face=null,faces=[],uv,uvArr;if(vcount===3){faces.push(new THREE.Face3(vs[0],vs[1],vs[2],ns,cs.length?cs:new THREE.Color()))}else if(vcount===4){faces.push(new THREE.Face4(vs[0],vs[1],vs[2],vs[3],ns,cs.length?cs:new THREE.Color()))}else if(vcount>4&&options.subdivideFaces){var clr=cs.length?cs:new THREE.Color(),vec1,vec2,vec3,v1,v2,norm;for(k=1;k<vcount-1;){faces.push(new THREE.Face3(vs[0],vs[k],vs[k+1],[ns[0],ns[k++],ns[k]],clr))}}if(faces.length){for(var ndx=0,len=faces.length;ndx<len;ndx++){face=faces[ndx];face.daeMaterial=primitive.material;geom.faces.push(face);for(k=0;k<texture_sets.length;k++){uv=ts[texture_sets[k]];if(vcount>4){uvArr=[uv[0],uv[ndx+1],uv[ndx+2]]}else if(vcount===4){uvArr=[uv[0],uv[1],uv[2],uv[3]]}else{uvArr=[uv[0],uv[1],uv[2]]}if(!geom.faceVertexUvs[k]){geom.faceVertexUvs[k]=[]}geom.faceVertexUvs[k].push(uvArr)}}}else{console.log('dropped face with vcount '+vcount+' for geometry with id: '+geom.id)}i+=maxOffset*vcount}}};function Polygons(){this.material="";this.count=0;this.inputs=[];this.vcount=null;this.p=[];this.geometry=new THREE.Geometry()}Polygons.prototype.setVertices=function(vertices){for(var i=0;i<this.inputs.length;i++){if(this.inputs[i].source==vertices.id){this.inputs[i].source=vertices.input['POSITION'].source}}};Polygons.prototype.parse=function(element){this.material=element.getAttribute('material');this.count=_attr_as_int(element,'count',0);for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];switch(child.nodeName){case 'input':this.inputs.push((new Input()).parse(element.childNodes[i]));break;case 'vcount':this.vcount=_ints(child.textContent);break;case 'p':this.p.push(_ints(child.textContent));break;case 'ph':console.warn('polygon holes not yet supported!');break;default:break}}return this};function Polylist(){Polygons.call(this);this.vcount=[]}Polylist.prototype=Object.create(Polygons.prototype);function Triangles(){Polygons.call(this);this.vcount=3}Triangles.prototype=Object.create(Polygons.prototype);function Accessor(){this.source="";this.count=0;this.stride=0;this.params=[]}Accessor.prototype.parse=function(element){this.params=[];this.source=element.getAttribute('source');this.count=_attr_as_int(element,'count',0);this.stride=_attr_as_int(element,'stride',0);for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeName=='param'){var param={};param['name']=child.getAttribute('name');param['type']=child.getAttribute('type');this.params.push(param)}}return this};function Vertices(){this.input={}}Vertices.prototype.parse=function(element){this.id=element.getAttribute('id');for(var i=0;i<element.childNodes.length;i++){if(element.childNodes[i].nodeName=='input'){var input=(new Input()).parse(element.childNodes[i]);this.input[input.semantic]=input}}return this};function Input(){this.semantic="";this.offset=0;this.source="";this.set=0}Input.prototype.parse=function(element){this.semantic=element.getAttribute('semantic');this.source=element.getAttribute('source').replace(/^#/,'');this.set=_attr_as_int(element,'set',-1);this.offset=_attr_as_int(element,'offset',0);if(this.semantic=='TEXCOORD'&&this.set<0){this.set=0}return this};function Source(id){this.id=id;this.type=null}Source.prototype.parse=function(element){this.id=element.getAttribute('id');for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];switch(child.nodeName){case 'bool_array':this.data=_bools(child.textContent);this.type=child.nodeName;break;case 'float_array':this.data=_floats(child.textContent);this.type=child.nodeName;break;case 'int_array':this.data=_ints(child.textContent);this.type=child.nodeName;break;case 'IDREF_array':case 'Name_array':this.data=_strings(child.textContent);this.type=child.nodeName;break;case 'technique_common':for(var j=0;j<child.childNodes.length;j++){if(child.childNodes[j].nodeName=='accessor'){this.accessor=(new Accessor()).parse(child.childNodes[j]);break}}break;default:break}}return this};Source.prototype.read=function(){var result=[],param=this.accessor.params[0];switch(param.type){case 'IDREF':case 'Name':case 'name':case 'float':return this.data;case 'float4x4':for(var j=0;j<this.data.length;j+=16){var s=this.data.slice(j,j+16),m=getConvertedMat4(s);result.push(m)}break;default:console.log('ColladaLoader: Source: Read dont know how to read '+param.type+'.');break}return result};function Material(){this.id="";this.name="";this.instance_effect=null}Material.prototype.parse=function(element){this.id=element.getAttribute('id');this.name=element.getAttribute('name');for(var i=0;i<element.childNodes.length;i++){if(element.childNodes[i].nodeName=='instance_effect'){this.instance_effect=(new InstanceEffect()).parse(element.childNodes[i]);break}}return this};function ColorOrTexture(){this.color=new THREE.Color();this.color.setRGB(Math.random(),Math.random(),Math.random());this.color.a=1.0;this.texture=null;this.texcoord=null;this.texOpts=null}ColorOrTexture.prototype.isColor=function(){return(this.texture==null)};ColorOrTexture.prototype.isTexture=function(){return(this.texture!=null)};ColorOrTexture.prototype.parse=function(element){if(element.nodeName=='transparent'){this.opaque=element.getAttribute('opaque')}for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'color':var rgba=_floats(child.textContent);this.color=new THREE.Color();this.color.setRGB(rgba[0],rgba[1],rgba[2]);this.color.a=rgba[3];break;case 'texture':this.texture=child.getAttribute('texture');this.texcoord=child.getAttribute('texcoord');this.texOpts={offsetU:0,offsetV:0,repeatU:1,repeatV:1,wrapU:1,wrapV:1,};this.parseTexture(child);break;default:break}}return this};ColorOrTexture.prototype.parseTexture=function(element){if(!element.childNodes)return this;if(element.childNodes[1]&&element.childNodes[1].nodeName==='extra'){element=element.childNodes[1];if(element.childNodes[1]&&element.childNodes[1].nodeName==='technique'){element=element.childNodes[1]}}for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];switch(child.nodeName){case 'offsetU':case 'offsetV':case 'repeatU':case 'repeatV':this.texOpts[child.nodeName]=parseFloat(child.textContent);break;case 'wrapU':case 'wrapV':this.texOpts[child.nodeName]=parseInt(child.textContent);break;default:this.texOpts[child.nodeName]=child.textContent;break}}return this};function Shader(type,effect){this.type=type;this.effect=effect;this.material=null}Shader.prototype.parse=function(element){for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'ambient':case 'emission':case 'diffuse':case 'specular':case 'transparent':this[child.nodeName]=(new ColorOrTexture()).parse(child);break;case 'shininess':case 'reflectivity':case 'index_of_refraction':case 'transparency':var f=evaluateXPath(child,'.//dae:float');if(f.length>0)this[child.nodeName]=parseFloat(f[0].textContent);break;default:break}}this.create();return this};Shader.prototype.create=function(){var props={},transparent=false;if(this['transparency']!==undefined&&this['transparent']!==undefined){var transparentColor=this['transparent'],transparencyLevel=(this.transparent.color.r+this.transparent.color.g+this.transparent.color.b)/3*this.transparency;if(transparencyLevel>0){transparent=true;props['transparent']=true;props['opacity']=1-transparencyLevel}}for(var prop in this){switch(prop){case 'ambient':case 'emission':case 'diffuse':case 'specular':var cot=this[prop];if(cot instanceof ColorOrTexture){if(cot.isTexture()){var samplerId=cot.texture,surfaceId=this.effect.sampler[samplerId];if(surfaceId!==undefined&&surfaceId.source!==undefined){var surface=this.effect.surface[surfaceId.source],image=images[surface.init_from];if(image){var texture=THREE.ImageUtils.loadTexture(baseUrl+image.init_from);texture.wrapS=cot.texOpts.wrapU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping;texture.wrapT=cot.texOpts.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping;texture.offset.x=cot.texOpts.offsetU;texture.offset.y=cot.texOpts.offsetV;texture.repeat.x=cot.texOpts.repeatU;texture.repeat.y=cot.texOpts.repeatV;props['map']=texture;if(prop==='emission')props['emissive']=0xffffff}}}else if(prop==='diffuse'||!transparent){if(prop==='emission'){props['emissive']=cot.color.getHex()}else{props[prop]=cot.color.getHex()}}}break;case 'shininess':props[prop]=this[prop];break;case 'reflectivity':props[prop]=this[prop];if(props[prop]>0.0)props['envMap']=options.defaultEnvMap;props['combine']=THREE.MixOperation;break;case 'index_of_refraction':props['refractionRatio']=this[prop];if(this[prop]!==1.0)props['envMap']=options.defaultEnvMap;break;case 'transparency':break;default:break}}props['shading']=preferredShading;props['side']=this.effect.doubleSided?THREE.DoubleSide:THREE.FrontSide;switch(this.type){case 'constant':if(props.emissive!=undefined)props.color=props.emissive;this.material=new THREE.MeshBasicMaterial(props);break;case 'phong':case 'blinn':if(props.diffuse!=undefined)props.color=props.diffuse;this.material=new THREE.MeshPhongMaterial(props);break;case 'lambert':default:if(props.diffuse!=undefined)props.color=props.diffuse;this.material=new THREE.MeshLambertMaterial(props);break}return this.material};function Surface(effect){this.effect=effect;this.init_from=null;this.format=null}Surface.prototype.parse=function(element){for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'init_from':this.init_from=child.textContent;break;case 'format':this.format=child.textContent;break;default:console.log("unhandled Surface prop: "+child.nodeName);break}}return this};function Sampler2D(effect){this.effect=effect;this.source=null;this.wrap_s=null;this.wrap_t=null;this.minfilter=null;this.magfilter=null;this.mipfilter=null}Sampler2D.prototype.parse=function(element){for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'source':this.source=child.textContent;break;case 'minfilter':this.minfilter=child.textContent;break;case 'magfilter':this.magfilter=child.textContent;break;case 'mipfilter':this.mipfilter=child.textContent;break;case 'wrap_s':this.wrap_s=child.textContent;break;case 'wrap_t':this.wrap_t=child.textContent;break;default:console.log("unhandled Sampler2D prop: "+child.nodeName);break}}return this};function Effect(){this.id="";this.name="";this.shader=null;this.surface={};this.sampler={}}Effect.prototype.create=function(){if(this.shader==null){return null}};Effect.prototype.parse=function(element){this.id=element.getAttribute('id');this.name=element.getAttribute('name');extractDoubleSided(this,element);this.shader=null;for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'profile_COMMON':this.parseTechnique(this.parseProfileCOMMON(child));break;default:break}}return this};Effect.prototype.parseNewparam=function(element){var sid=element.getAttribute('sid');for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'surface':this.surface[sid]=(new Surface(this)).parse(child);break;case 'sampler2D':this.sampler[sid]=(new Sampler2D(this)).parse(child);break;case 'extra':break;default:console.log(child.nodeName);break}}};Effect.prototype.parseProfileCOMMON=function(element){var technique;for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'profile_COMMON':this.parseProfileCOMMON(child);break;case 'technique':technique=child;break;case 'newparam':this.parseNewparam(child);break;case 'image':var _image=(new _Image()).parse(child);images[_image.id]=_image;break;case 'extra':break;default:console.log(child.nodeName);break}}return technique};Effect.prototype.parseTechnique=function(element){for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'constant':case 'lambert':case 'blinn':case 'phong':this.shader=(new Shader(child.nodeName,this)).parse(child);break;default:break}}};function InstanceEffect(){this.url=""}InstanceEffect.prototype.parse=function(element){this.url=element.getAttribute('url').replace(/^#/,'');return this};function Animation(){this.id="";this.name="";this.source={};this.sampler=[];this.channel=[]}Animation.prototype.parse=function(element){this.id=element.getAttribute('id');this.name=element.getAttribute('name');this.source={};for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'animation':var anim=(new Animation()).parse(child);for(var src in anim.source){this.source[src]=anim.source[src]}for(var j=0;j<anim.channel.length;j++){this.channel.push(anim.channel[j]);this.sampler.push(anim.sampler[j])}break;case 'source':var src=(new Source()).parse(child);this.source[src.id]=src;break;case 'sampler':this.sampler.push((new Sampler(this)).parse(child));break;case 'channel':this.channel.push((new Channel(this)).parse(child));break;default:break}}return this};function Channel(animation){this.animation=animation;this.source="";this.target="";this.fullSid=null;this.sid=null;this.dotSyntax=null;this.arrSyntax=null;this.arrIndices=null;this.member=null}Channel.prototype.parse=function(element){this.source=element.getAttribute('source').replace(/^#/,'');this.target=element.getAttribute('target');var parts=this.target.split('/'),id=parts.shift(),sid=parts.shift(),dotSyntax=(sid.indexOf(".")>=0),arrSyntax=(sid.indexOf("(")>=0);if(dotSyntax){parts=sid.split(".");this.sid=parts.shift();this.member=parts.shift()}else if(arrSyntax){var arrIndices=sid.split("(");this.sid=arrIndices.shift();for(var j=0;j<arrIndices.length;j++){arrIndices[j]=parseInt(arrIndices[j].replace(/\)/,''))}this.arrIndices=arrIndices}else{this.sid=sid}this.fullSid=sid;this.dotSyntax=dotSyntax;this.arrSyntax=arrSyntax;return this};function Sampler(animation){this.id="";this.animation=animation;this.inputs=[];this.input=null;this.output=null;this.strideOut=null;this.interpolation=null;this.startTime=null;this.endTime=null;this.duration=0}Sampler.prototype.parse=function(element){this.id=element.getAttribute('id');this.inputs=[];for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'input':this.inputs.push((new Input()).parse(child));break;default:break}}return this};Sampler.prototype.create=function(){for(var i=0;i<this.inputs.length;i++){var input=this.inputs[i],source=this.animation.source[input.source];switch(input.semantic){case 'INPUT':this.input=source.read();break;case 'OUTPUT':this.output=source.read();this.strideOut=source.accessor.stride;break;case 'INTERPOLATION':this.interpolation=source.read();break;case 'IN_TANGENT':break;case 'OUT_TANGENT':break;default:console.log(input.semantic);break}}this.startTime=0;this.endTime=0;this.duration=0;if(this.input.length){this.startTime=100000000;this.endTime=-100000000;for(var i=0;i<this.input.length;i++){this.startTime=Math.min(this.startTime,this.input[i]);this.endTime=Math.max(this.endTime,this.input[i])}this.duration=this.endTime-this.startTime}};Sampler.prototype.getData=function(type,ndx){var data;if(type==='matrix'&&this.strideOut===16){data=this.output[ndx]}else if(this.strideOut>1){data=[];ndx*=this.strideOut;for(var i=0;i<this.strideOut;++i){data[i]=this.output[ndx+i]}if(this.strideOut===3){switch(type){case 'rotate':case 'translate':fixCoords(data,-1);break;case 'scale':fixCoords(data,1);break}}else if(this.strideOut===4&&type==='matrix'){fixCoords(data,-1)}}else{data=this.output[ndx]}return data};function Key(time){this.targets=[];this.time=time}Key.prototype.addTarget=function(fullSid,transform,member,data){this.targets.push({sid:fullSid,member:member,transform:transform,data:data})};Key.prototype.apply=function(opt_sid){for(var i=0;i<this.targets.length;++i){var target=this.targets[i];if(!opt_sid||target.sid===opt_sid){target.transform.update(target.data,target.member)}}};Key.prototype.getTarget=function(fullSid){for(var i=0;i<this.targets.length;++i){if(this.targets[i].sid===fullSid){return this.targets[i]}}return null};Key.prototype.hasTarget=function(fullSid){for(var i=0;i<this.targets.length;++i){if(this.targets[i].sid===fullSid){return true}}return false};Key.prototype.interpolate=function(nextKey,time){for(var i=0;i<this.targets.length;++i){var target=this.targets[i],nextTarget=nextKey.getTarget(target.sid),data;if(target.transform.type!=='matrix'&&nextTarget){var scale=(time-this.time)/(nextKey.time-this.time),nextData=nextTarget.data,prevData=target.data;if(scale<0||scale>1){console.log("Key.interpolate: Warning! Scale out of bounds:"+scale);scale=scale<0?0:1}if(prevData.length){data=[];for(var j=0;j<prevData.length;++j){data[j]=prevData[j]+(nextData[j]-prevData[j])*scale}}else{data=prevData+(nextData-prevData)*scale}}else{data=target.data}target.transform.update(data,target.member)}};function Camera(){this.id="";this.name="";this.technique=""}Camera.prototype.parse=function(element){this.id=element.getAttribute('id');this.name=element.getAttribute('name');for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'optics':this.parseOptics(child);break;default:break}}return this};Camera.prototype.parseOptics=function(element){for(var i=0;i<element.childNodes.length;i++){if(element.childNodes[i].nodeName=='technique_common'){var technique=element.childNodes[i];for(var j=0;j<technique.childNodes.length;j++){this.technique=technique.childNodes[j].nodeName;if(this.technique=='perspective'){var perspective=technique.childNodes[j];for(var k=0;k<perspective.childNodes.length;k++){var param=perspective.childNodes[k];switch(param.nodeName){case 'yfov':this.yfov=param.textContent;break;case 'xfov':this.xfov=param.textContent;break;case 'znear':this.znear=param.textContent;break;case 'zfar':this.zfar=param.textContent;break;case 'aspect_ratio':this.aspect_ratio=param.textContent;break}}}else if(this.technique=='orthographic'){var orthographic=technique.childNodes[j];for(var k=0;k<orthographic.childNodes.length;k++){var param=orthographic.childNodes[k];switch(param.nodeName){case 'xmag':this.xmag=param.textContent;break;case 'ymag':this.ymag=param.textContent;break;case 'znear':this.znear=param.textContent;break;case 'zfar':this.zfar=param.textContent;break;case 'aspect_ratio':this.aspect_ratio=param.textContent;break}}}}}}return this};function InstanceCamera(){this.url=""}InstanceCamera.prototype.parse=function(element){this.url=element.getAttribute('url').replace(/^#/,'');return this};function Light(){this.id="";this.name="";this.technique=""}Light.prototype.parse=function(element){this.id=element.getAttribute('id');this.name=element.getAttribute('name');for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case 'technique_common':this.parseCommon(child);break;case 'technique':this.parseTechnique(child);break;default:break}}return this};Light.prototype.parseCommon=function(element){for(var i=0;i<element.childNodes.length;i++){switch(element.childNodes[i].nodeName){case 'directional':case 'point':case 'spot':case 'ambient':this.technique=element.childNodes[i].nodeName;var light=element.childNodes[i];for(var j=0;j<light.childNodes.length;j++){var child=light.childNodes[j];switch(child.nodeName){case 'color':var rgba=_floats(child.textContent);this.color=new THREE.Color(0);this.color.setRGB(rgba[0],rgba[1],rgba[2]);this.color.a=rgba[3];break;case 'falloff_angle':this.falloff_angle=parseFloat(child.textContent);break}}}}return this};Light.prototype.parseTechnique=function(element){this.profile=element.getAttribute('profile');for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];switch(child.nodeName){case 'intensity':this.intensity=parseFloat(child.textContent);break}}return this};function InstanceLight(){this.url=""}InstanceLight.prototype.parse=function(element){this.url=element.getAttribute('url').replace(/^#/,'');return this};function _source(element){var id=element.getAttribute('id');if(sources[id]!=undefined){return sources[id]}sources[id]=(new Source(id)).parse(element);return sources[id]}function _nsResolver(nsPrefix){if(nsPrefix=="dae"){return "http://www.collada.org/2005/11/COLLADASchema"}return null}function _bools(str){var raw=_strings(str),data=[];for(var i=0,l=raw.length;i<l;i++){data.push((raw[i]=='true'||raw[i]=='1')?true:false)}return data}function _floats(str){var raw=_strings(str),data=[];for(var i=0,l=raw.length;i<l;i++){data.push(parseFloat(raw[i]))}return data}function _ints(str){var raw=_strings(str),data=[];for(var i=0,l=raw.length;i<l;i++){data.push(parseInt(raw[i],10))}return data}function _strings(str){return(str.length>0)?_trimString(str).split(/\s+/):[]}function _trimString(str){return str.replace(/^\s+/,"").replace(/\s+$/,"")}function _attr_as_float(element,name,defaultValue){if(element.hasAttribute(name)){return parseFloat(element.getAttribute(name))}else{return defaultValue}}function _attr_as_int(element,name,defaultValue){if(element.hasAttribute(name)){return parseInt(element.getAttribute(name),10)}else{return defaultValue}}function _attr_as_string(element,name,defaultValue){if(element.hasAttribute(name)){return element.getAttribute(name)}else{return defaultValue}}function _format_float(f,num){if(f===undefined){var s='0.';while(s.length<num+2){s+='0'}return s}num=num||2;var parts=f.toString().split('.');parts[1]=parts.length>1?parts[1].substr(0,num):"0";while(parts[1].length<num){parts[1]+='0'}return parts.join('.')}function evaluateXPath(node,query){var instances=COLLADA.evaluate(query,node,_nsResolver,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null),inst=instances.iterateNext(),result=[];while(inst){result.push(inst);inst=instances.iterateNext()}return result}function extractDoubleSided(obj,element){obj.doubleSided=false;var node=COLLADA.evaluate('.//dae:extra//dae:double_sided',element,_nsResolver,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);if(node){node=node.iterateNext();if(node&&parseInt(node.textContent,10)===1){obj.doubleSided=true}}}function setUpConversion(){if(!options.convertUpAxis||colladaUp===options.upAxis){upConversion=null}else{switch(colladaUp){case 'X':upConversion=options.upAxis==='Y'?'XtoY':'XtoZ';break;case 'Y':upConversion=options.upAxis==='X'?'YtoX':'YtoZ';break;case 'Z':upConversion=options.upAxis==='X'?'ZtoX':'ZtoY';break}}}function fixCoords(data,sign){if(!options.convertUpAxis||colladaUp===options.upAxis){return}switch(upConversion){case 'XtoY':var tmp=data[0];data[0]=sign*data[1];data[1]=tmp;break;case 'XtoZ':var tmp=data[2];data[2]=data[1];data[1]=data[0];data[0]=tmp;break;case 'YtoX':var tmp=data[0];data[0]=data[1];data[1]=sign*tmp;break;case 'YtoZ':var tmp=data[1];data[1]=sign*data[2];data[2]=tmp;break;case 'ZtoX':var tmp=data[0];data[0]=data[1];data[1]=data[2];data[2]=tmp;break;case 'ZtoY':var tmp=data[1];data[1]=data[2];data[2]=sign*tmp;break}}function getConvertedVec3(data,offset){var arr=[data[offset],data[offset+1],data[offset+2]];fixCoords(arr,-1);return new THREE.Vector3(arr[0],arr[1],arr[2])}function getConvertedMat4(data){if(options.convertUpAxis){var arr=[data[0],data[4],data[8]];fixCoords(arr,-1);data[0]=arr[0];data[4]=arr[1];data[8]=arr[2];arr=[data[1],data[5],data[9]];fixCoords(arr,-1);data[1]=arr[0];data[5]=arr[1];data[9]=arr[2];arr=[data[2],data[6],data[10]];fixCoords(arr,-1);data[2]=arr[0];data[6]=arr[1];data[10]=arr[2];arr=[data[0],data[1],data[2]];fixCoords(arr,-1);data[0]=arr[0];data[1]=arr[1];data[2]=arr[2];arr=[data[4],data[5],data[6]];fixCoords(arr,-1);data[4]=arr[0];data[5]=arr[1];data[6]=arr[2];arr=[data[8],data[9],data[10]];fixCoords(arr,-1);data[8]=arr[0];data[9]=arr[1];data[10]=arr[2];arr=[data[3],data[7],data[11]];fixCoords(arr,-1);data[3]=arr[0];data[7]=arr[1];data[11]=arr[2]}return new THREE.Matrix4(data[0],data[1],data[2],data[3],data[4],data[5],data[6],data[7],data[8],data[9],data[10],data[11],data[12],data[13],data[14],data[15])}function getConvertedIndex(index){if(index>-1&&index<3){var members=['X','Y','Z'],indices={X:0,Y:1,Z:2};index=getConvertedMember(members[index]);index=indices[index]}return index}function getConvertedMember(member){if(options.convertUpAxis){switch(member){case 'X':switch(upConversion){case 'XtoY':case 'XtoZ':case 'YtoX':member='Y';break;case 'ZtoX':member='Z';break}break;case 'Y':switch(upConversion){case 'XtoY':case 'YtoX':case 'ZtoX':member='X';break;case 'XtoZ':case 'YtoZ':case 'ZtoY':member='Z';break}break;case 'Z':switch(upConversion){case 'XtoZ':member='X';break;case 'YtoZ':case 'ZtoX':case 'ZtoY':member='Y';break}break}}return member}THREE.MTLLoader=function(baseUrl,options,crossOrigin){this.baseUrl=baseUrl;this.options=options;this.crossOrigin=crossOrigin};THREE.MTLLoader.prototype={constructor:THREE.MTLLoader,load:function(url){var scope=this,xhr=new XMLHttpRequest();function onloaded(event){if(event.target.status===200||event.target.status===0){var materialCreator=scope.parse(event.target.responseText);scope.dispatchEvent({type:'load',content:materialCreator})}else{scope.dispatchEvent({type:'error',message:'Couldn\'t load URL ['+url+']',response:event.target.responseText})}}xhr.addEventListener('load',onloaded,false);xhr.addEventListener('error',function(){scope.dispatchEvent({type:'error',message:'Couldn\'t load URL ['+url+']'})},false);xhr.open('GET',url,true);xhr.send(null)},parse:function(text){var lines=text.split("\n"),info={},delimiter_pattern=/\s+/,materialsInfo={};for(var i=0;i<lines.length;i++){var line=lines[i];line=line.trim();if(line.length===0||line.charAt(0)==='#'){continue}var pos=line.indexOf(' '),key=(pos>=0)?line.substring(0,pos):line;key=key.toLowerCase();var value=(pos>=0)?line.substring(pos+1):"";value=value.trim();if(key==="newmtl"){info={name:value};materialsInfo[value]=info}else if(info){if(key==="ka"||key==="kd"||key==="ks"){var ss=value.split(delimiter_pattern,3);info[key]=[parseFloat(ss[0]),parseFloat(ss[1]),parseFloat(ss[2])]}else{info[key]=value}}}var materialCreator=new THREE.MTLLoader.MaterialCreator(this.baseUrl,this.options);materialCreator.setMaterials(materialsInfo);return materialCreator}};THREE.MTLLoader.MaterialCreator=function(baseUrl,options){this.baseUrl=baseUrl;this.options=options;this.materialsInfo={};this.materials={};this.materialsArray=[];this.nameLookup={};this.side=(this.options&&this.options.side)?this.options.side:THREE.FrontSide;this.wrap=(this.options&&this.options.wrap)?this.options.wrap:THREE.RepeatWrapping};THREE.MTLLoader.MaterialCreator.prototype={constructor:THREE.MTLLoader.MaterialCreator,setMaterials:function(materialsInfo){this.materialsInfo=this.convert(materialsInfo);this.materials={};this.materialsArray=[];this.nameLookup={}},convert:function(materialsInfo){if(!this.options)return materialsInfo;var converted={};for(var mn in materialsInfo){var mat=materialsInfo[mn],covmat={};converted[mn]=covmat;for(var prop in mat){var save=true,value=mat[prop],lprop=prop.toLowerCase();switch(lprop){case 'kd':case 'ka':case 'ks':if(this.options&&this.options.normalizeRGB){value=[value[0]/255,value[1]/255,value[2]/255]}if(this.options&&this.options.ignoreZeroRGBs){if(value[0]===0&&value[1]===0&&value[1]===0){save=false}}break;case 'd':if(this.options&&this.options.invertTransparency){value=1-value}break;default:break}if(save){covmat[lprop]=value}}}return converted},preload:function(){for(var mn in this.materialsInfo){this.create(mn)}},getIndex:function(materialName){return this.nameLookup[materialName]},getAsArray:function(){var index=0;for(var mn in this.materialsInfo){this.materialsArray[index]=this.create(mn);this.nameLookup[mn]=index;index++}return this.materialsArray},create:function(materialName){if(this.materials[materialName]===undefined){this.createMaterial_(materialName)}return this.materials[materialName]},createMaterial_:function(materialName){var mat=this.materialsInfo[materialName],params={name:materialName,side:this.side};for(var prop in mat){var value=mat[prop];switch(prop.toLowerCase()){case 'kd':break;case 'ka':break;case 'ks':params['specular']=new THREE.Color().fromArray(value);break;case 'map_kd':params['map']=this.loadTexture(this.baseUrl+value);params['map'].wrapS=this.wrap;params['map'].wrapT=this.wrap;break;case 'ns':params['shininess']=value;break;case 'd':if(value<1){params['transparent']=true;params['opacity']=value}break;default:break}}if(params['diffuse']){if(!params['ambient'])params['ambient']=params['diffuse'];params['color']=params['diffuse']}this.materials[materialName]=new THREE.MeshPhongMaterial(params);return this.materials[materialName]},loadTexture:function(url,mapping,onLoad,onError){var isCompressed=/\.dds$/i.test(url);if(isCompressed){var texture=THREE.ImageUtils.loadCompressedTexture(url,mapping,onLoad,onError)}else{var image=new Image(),texture=new THREE.Texture(image,mapping),loader=new THREE.ImageLoader();loader.crossOrigin=this.crossOrigin;loader.load(url,function(image){texture.image=THREE.MTLLoader.ensurePowerOfTwo_(image);texture.needsUpdate=true;if(onLoad){onLoad(texture)}else{for(var i in loader.load){debug('error: '+i)}}})}return texture}};THREE.MTLLoader.ensurePowerOfTwo_=function(image){if(!THREE.MTLLoader.isPowerOfTwo_(image.width)||!THREE.MTLLoader.isPowerOfTwo_(image.height)){var canvas=document.createElement("canvas");canvas.width=THREE.MTLLoader.nextHighestPowerOfTwo_(image.width);canvas.height=THREE.MTLLoader.nextHighestPowerOfTwo_(image.height);var ctx=canvas.getContext("2d");ctx.drawImage(image,0,0,image.width,image.height,0,0,canvas.width,canvas.height);return canvas}return image};THREE.MTLLoader.isPowerOfTwo_=function(x){return(x&(x-1))===0};THREE.MTLLoader.nextHighestPowerOfTwo_=function(x){--x;for(var i=1;i<32;i<<=1){x=x|x>>i}return x+1};THREE.EventDispatcher.prototype.apply(THREE.MTLLoader.prototype)}function loadJsFile(filename){var fileref=document.createElement('script');fileref.setAttribute('src',filename);fileref.setAttribute('type','text/javascript');if(typeof fileref!="undefined")document.getElementsByTagName("head")[0].appendChild(fileref)}}canvasio3D_JS();